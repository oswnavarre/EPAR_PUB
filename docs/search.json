[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Análisis de Datos en Agricultura con R y RStudio",
    "section": "",
    "text": "A modo de introducción\nEn la actualidad es díficil pensar en una ciencia que evolucione sin el soporte de la estadística, las ciencias agrícolas no son la excepción. La investigación y el desarrollo en la agricultura usan métodos y procedimientos estadísticos necesarios para resolver diferentes aspectos y problemas que forman parte de algunas ramas de la actividad agrícola (Kibuuka (2009)).\nLa evolución de las técnicas y las metodologías estadísticas se debe en gran medida a la rapidez con la que han evolucionado las computadoras y su capacidad de procesar grandes volúmenes de datos. En la actualidad aprender estadística sin el soporte de algún programa o lenguaje de programación orientado a la estadística, puede limitar tanto la posibilidad de abstraer conceptos importantes como la oportunidad de saber como aplicar el análisis estadístico en contextos reales.\nUno de los objetivos de este libro es que el futuro profesional de agronomía adquiera conocimientos importantes de estadística y construya una base sólida desde el punto de vista teórico y práctico que le permita desarrollar de forma autónoma análisis estadísticos a datos provenientes de fuentes diversas y relacionadas con sus áreas de desempeño.\nLos conjuntos de datos utilizados en el libro se pueden encontrar en el enlace\n\n\n\n\nKibuuka, E. (2009). Formulating a country’s agricultural statistics strategy: The South African experience. 10."
  },
  {
    "objectID": "intro.html#qué-es-r-y-por-qué-lo-vamos-a-usar",
    "href": "intro.html#qué-es-r-y-por-qué-lo-vamos-a-usar",
    "title": "1  R y RStudio",
    "section": "1.1 ¿Qué es R y por qué lo vamos a usar?",
    "text": "1.1 ¿Qué es R y por qué lo vamos a usar?\nR es un lenguaje de programación que tiene más de 30 años de historia, mientras que RStudio es uno de los tantos entornos de desarrollo integrados que existen para trabajar con R. Es común escuchar las preguntas ¿por qué trabajar con R cuando existen programas mucho más “sencillos” para hacer análisis de datos?, ¿para qué complicar a los estudiantes enseñándoles a programar si además deben aprender estadística?. Existen muchas respuestas a esas preguntas, sin embargo, a continuación se presenta una lista de razones que fortalecen la idea de porqué usar R, algunas de estas ideas son expuestas en Tucker et al. (2022) y Agwu y Bialas (2018).\n\nR es un programa libre, gratuito y de desarrollo independiente disponible para la mayoría de sistemas operativos lo que reduce las barreras de acceso.\nEs flexible y poderoso tanto para simulación como para el análisis de datos.\nEl hecho de que involucre escribir código permite reproducir los análisis hechos por cualquier persona sin ninguna condición o limitante.\n\nEscribir código en R ayuda a que el pensamiento estadístico y los procesos de análisis estadístico sean más visibles y reproducibles; es decir que usar R, podría ofrecer una herramienta adicional de representación que permite construir el entendimiento de los conceptos (Tucker et al. (2022)).\nCuando se instala R por defecto vienen incorporados paquetes que permiten importar datos, ajustar y evaluar modelos, realizar gráficos. Mas, es posible añadir funcionalidades a R instalando y cargando nuevos paquetes, un paquete es una colección de funciones de R, datos y código compilado en un formato bien definido, creado para agregar alguna funcionalidad específica (Data Carpentry (2020)). En la actualidad existen más de 19000 paquetes (y creciendo) para todo tipo de análisis estadístico, gran parte de los nuevos resultados o metodologías estadísticas publicadas en revistas de investigación generalmente son desarrolladas en paquetes de R lo que hace fácil acceder a las últimas técnicas estadísticas."
  },
  {
    "objectID": "intro.html#rstudio.",
    "href": "intro.html#rstudio.",
    "title": "1  R y RStudio",
    "section": "1.2 RStudio.",
    "text": "1.2 RStudio.\nLa interfaz de R es muy básica y para personas interesadas (u obligadas) a aprender este lenguaje de programación que no están familiarizados con algún otro lenguaje, usar esta interfaz puede resultar frustrante al punto de querer desistir de aprender R. Rstudio es un entorno de desarrollo integrado (IDE) gratuito y de código abierto para R. Incluye una consola, un editor de resaltado de sintaxis que admite la ejecución directa de código, así como herramientas para la graficación, revisar el historial, gestionar conexiones, la depuración del código y la gestión del espacio o directorio de trabajo (Navarrete y Chávez (2019)).\nEn Ismay (2022) se hace una analogía interesante en la que se menciona que R se puede entender como el motor de un vehículo, mientras que Rstudio es el tablero del vehículo que permite tener a la mano todas las funcionalidades del mismo."
  },
  {
    "objectID": "intro.html#poniendo-todo-a-punto-para-empezar",
    "href": "intro.html#poniendo-todo-a-punto-para-empezar",
    "title": "1  R y RStudio",
    "section": "1.3 Poniendo todo a punto para empezar",
    "text": "1.3 Poniendo todo a punto para empezar\n\n1.3.1 Instalación de R y RStudio\nUn flujo de trabajo recomendado es, primero descargar e instalar R. El programa puede ser descargado de la página https://cloud.r-project.org/. En la Figura 1.1 se muestra la pantalla de la página. Una vez descargado el programa, se procede a instalarlo.\n\n\n\nFigura 1.1: Página para descargar R\n\n\nA continuación se procede a descargar RStudio de la página https://posit.co/downloads/. En la Figura 1.2 se muestra la pantalla de la página. Una vez descargado el programa se procede a instalarlo.\n\n\n\nFigura 1.2: Página para descargar RStudio\n\n\nEn la Figura 1.3 se muestran las interfaces de R y RStudio respectivamente, a lo largo de este libro aprenderemos el lenguaje de programación R utilizando RStudio por lo que en la siguiente sección exploraremos la interfaz del segundo programa.\n\n\n\n\n\n\n\n(a) Interfaz de R\n\n\n\n\n\n\n\n(b) Interfaz de RStudio\n\n\n\n\nFigura 1.3: Interfaces de R y RStudio\n\n\n\n\n\n1.3.2 Conociendo la interfaz de RStudio\nCuando se abre RStudio por primera vez se observan 3 paneles. Sin embargo, cuando se comienza a usar el programa con frecuencia veremos 4 paneles. Por defecto en la parte superior izquierda aparece el panel de fuente o scripts, en la parte superior derecha el panel de espacio de trabajo o ambiente, en la parte inferior izquierda aparece la consola y en la parte inferior derecha aparece el panel de archivos, gráficos, paquetes y ayuda. En la Figura 1.4 se presenta la ubicación de estos cuatro paneles. A continuación una descripción de cada uno de estos paneles.\n\n\n\nFigura 1.4: Paneles de RStudio\n\n\n\nLa consola de R, ubicada en la parte inferior izquierda, es donde se envían los comandos para ser ejecutados.\nEl panel de fuente o scripts, ubicado en la parte superior izquierda, es desde donde la mayoría de las veces se enviará el código a la consola donde R lo ejecutará. Para crear un script hay dos opciones. La primera es en la barra de herramientas principal escoger File | New File | R Script, la segunda opción es escribir la combinación de teclas (en Windows) Ctrl + Shift + N o Cmd + Shift + N (en Mac)\nEl panel de espacio de trabajo o ambiente, ubicado en la parte superior derecha, además del ambiente tiene pestañas para el historial, las conexiones y tutoriales. Sin embargo, solo detallaremos del ambiente y el historial. En el ambiente se van mostrando las variables, los objetos y los valores que se van creando o calculando. En el historial se muestran los comandos que se han enviado a R en la sesión de trabajo.\nEl panel de archivos, gráficos, paquetes y ayuda, ubicado en la parte inferior derecha, muestra los archivos que se encuentran en el directorio de trabajo, los gráficos que se van generando en la sesión y que no se almacenan como variables, los paquetes instalados tanto en la librería del sistema como del usuario y la ayuda para estos paquetes."
  },
  {
    "objectID": "intro.html#sec-packs",
    "href": "intro.html#sec-packs",
    "title": "1  R y RStudio",
    "section": "1.4 Instalar paquetes",
    "text": "1.4 Instalar paquetes\nA lo largo de este libro usaremos algunos paquetes. En esta sección aprenderemos a instalar paquetes. Existen 2 formas para instalar un paquete.\n\nDesde la consola o un script\nDesde la pestaña de paquetes o desde la barra de menú.\n\nAntes de instalar los paquetes vamos a describir brevemente algunos de los paquetes que vamos a usar en este curso:\n\ntidyverse: El paquete tidyverse es considerado un metapaquete porque es un paquete que carga paquetes. Los paquetes que se cargan con el paquete tidyverse son:\n\ndplyr: implementa una gramática para la manipulación de datos.\nforcats: ofrece herramientas para trabajar con variables categóricas.\nggplot2: crea visualizaciones de datos elegantes utilizando una gramática de gráficos.\nlubridate: permite trabajar con fechas de una forma sencilla.\npurrr: herramientas de programación funcional.\nreadr: ayuda a leer datos de texto rectangulares.\nstringr: ofrece funciones para manejo de cadenas de carácteres.\ntibble: provee una versión de data frame que facilita el trabajo con tidyverse.\ntidyr: herramientas para crear datos ordenados (tidy data)\n\nagricolae: procedimientos agrícolas para investigación agrícola.\nreadxl: leer archivos de Excel.\nwritexl: guardar conjuntos de datos y tablas en archivos de Excel.\njtools: análisis y presentación de datos sociales y científicos.\nDescTools: herramientas para estadística descriptiva.\ncowplot: provee varias características que ayudan a la creación de figuras de alta calidad con ggplot2.\n\n\n1.4.1 Desde la consola o un script\nPara instalar paquetes desde la consola o desde un script se debe utilizar la función ìnstall.packages(\"nombrepaquete\") así si se quiere instalar el paquete tidyverse se escribe en la consola o en un script ìnstall.packages(\"tidyverse\").\nUn script es un archivo de texto que contiene los mismos comandos que ingresaría en la línea de comandos de R. Una vez abierto RStudio, para crear un script hay dos opciones. La primera es en la barra de herramientas principal escoger File | New File | R Script, la segunda opción es escribir la combinación de teclas (en Windows) Ctrl + Shift + N o Cmd + Shift + N (en Mac).\nCuando el script está creado se puede escribir código como se visualiza a la derecha de la Figura 1.5. Para ejecutar el código se puede ubicar en cualquier parte de la línea y presionar la combinación de teclas Ctrl + Entero Cmd + Enter, otra opción es dar clic en el botón Run ubicado en la parte superior derecha del script (encerrada en rectángulo rojo de la Figura 1.6). Si solo es una línea de código no es necesario seleccionarla para poder ejecutarla. Al momento de ejecutar el código, el código se ejecuta en la consola (rectángulo azul de la Figura 1.6) y además se visualiza el objeto en el ambiente (rectángulo negro de la Figura 1.6).\n\n\n\nFigura 1.5: Creación de un script\n\n\n\n\n\nFigura 1.6: Ejecución de comandos desde un script\n\n\n\n\n\nFigura 1.7: Combinación de teclas para ejecutar código desde un script (Windows)\n\n\n\n\n\nFigura 1.8: Combinación de teclas para ejecutar código desde un script (Mac)\n\n\n\n\n1.4.2 Desde la pestaña de paquetes o desde la barra de menú\nEn el panel de archivos, gráficos, paquetes y ayuda se escoge la pestaña Packages y luego se da clic en la opción Ìnstall, aparece una ventana como la que se muestra en la Figura 1.9. En caja de texto titulada Packages (separate multiple with space or comma) se deben escribir el nombre del o de los paquetes que se van a instalar separados por coma o por un espacio como se muestra en la Figura 1.10. A medida que se escribe el nombre del paquete aparecen posibles paquetes a ser instalados. Otra forma de acceder a esta venta es en la barra de menú Tools -&gt; Install Packages....\n\n\n\nFigura 1.9: Ventana de Instalación de Paquetes\n\n\n\n\n\nFigura 1.10: Ventana de Instalación de Paquetes"
  },
  {
    "objectID": "intro.html#sec-basicsR",
    "href": "intro.html#sec-basicsR",
    "title": "1  R y RStudio",
    "section": "1.5 Los básicos del lenguaje R",
    "text": "1.5 Los básicos del lenguaje R\n\n1.5.1 Sintaxis de R\nEn la consola de R podemos escribir las siguientes expresiones\n&gt; x &lt;- 6 # Crear la variable x con un valor igual a 6\n&gt; print(x) # Impresión explicita\n[1] 6\n&gt; x # Auto-impresión\n[1] 6\nEl símbolo # sirve para poner comentarios a nuestro código. Todo lo que se escriba a la derecha del numeral (incluido el símbolo) no se toma en cuenta. En R no se pueden poner comentarios multilíneas.\nCuando se escribe un comando en el prompt, se evalúa el comando y se obtiene el resultado del comando evaluado.\nEl resultado se puede auto-imprimir que es lo que ocurre cuando se escribe el nombre del objeto. El [1] indica que x es un vector y el 6 es el primer elemento. De manera general la impresión explícita con la función print() no se usa con frecuencia. Esta es una práctica que a veces es necesaria cuando se escriben scripts, funciones o programas largos.\nCuando se presenta un vector en R podremos ver que un índice del vector se imprime en corchetes [] en el lado izquierdo. En el siguiente ejemplo podemos fijarnos en esto. Los números que se muestran en los corchetes no son parte del vector, únicamente son parte del resultado impreso.\n\nx &lt;- seq(20,200, by = 5)\nx\n\n [1]  20  25  30  35  40  45  50  55  60  65  70  75  80  85  90  95 100 105 110\n[20] 115 120 125 130 135 140 145 150 155 160 165 170 175 180 185 190 195 200\n\n\n\n\n1.5.2 Objetos de R\nR tiene cinco clases de objetos básicos, algunos autores también los llaman objetos atómicos.\n\nCaracter. (character, chr)\nNumérico. (numeric, num)\nEntero. (integer, int)\nComplejo. (complex, cplx)\nLógico. (logical, logi)\n\nEl objeto más básico de R es el vector. Para crear vectores vacíos se utiliza la función vector(). La regla única para crear vectores es: Un vector debe tener solamente objetos de la misma clase, la excepción de la regla son las listas que son un tipo especial de vectores que pueden contener elementos de diferentes clases. Las listas son un importante tipo de datos en R. La creación de una lista se lo hace con la función list().\n\n\n1.5.3 Vectores\nPara crear vectores se utiliza la función c() que concatena o une los elementos.\n\nv1 &lt;- c(3, 5, 2.3) # Numérico\nv2 &lt;- c(TRUE, FALSE, FALSE, TRUE, TRUE) # Lógico\nv3 &lt;- c(T, F, F, T, T) # Lógico\nv4 &lt;- c(3+4i, 7-2i, 3i) # Complejo\nv5 &lt;- c(3, 2, 7) # Entero\n\nLas letras T y F son abreviaturas para especificar TRUE (verdadero) o FALSE (falso). Con la función vector() se pueden inicializar vectores.\n\ny &lt;- vector(\"complex\", length = 5)\ny\n\n[1] 0+0i 0+0i 0+0i 0+0i 0+0i\n\n\n\n\n1.5.4 Coerción implícita y explícita\nCuando en un vector se mezclan objetos de distintas clases, ocurre la coerción implícita de tal forma que todos los elementos en el vector se convierten a elementos de la misma clase. Para verificar la clase de un vector usamos la función class().\n\nv6 &lt;- c(3.14, \"x\")\nclass(v6)\n\n[1] \"character\"\n\nv7 &lt;- c(T, 4, F)\nclass(v7)\n\n[1] \"numeric\"\n\nv8 &lt;- c(F,\"x\")\nclass(v8)\n\n[1] \"character\"\n\n\nPor su parte la coerción explicita ocurre cuando se utiliza la función as.*, el * puede ser reemplazado por numeric, character, logical, integer y complex.\n\np &lt;- seq(0, 14, 1.4)\nclass(p)\n\n[1] \"numeric\"\n\nas.integer(p)\n\n [1]  0  1  2  4  5  7  8  9 11 12 14\n\nas.logical(p)\n\n [1] FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n\nas.character(p)\n\n [1] \"0\"    \"1.4\"  \"2.8\"  \"4.2\"  \"5.6\"  \"7\"    \"8.4\"  \"9.8\"  \"11.2\" \"12.6\"\n[11] \"14\"  \n\nas.complex(p)\n\n [1]  0.0+0i  1.4+0i  2.8+0i  4.2+0i  5.6+0i  7.0+0i  8.4+0i  9.8+0i 11.2+0i\n[10] 12.6+0i 14.0+0i\n\n\nEn ciertas ocasiones no es posible para R coercionar un objeto en la clase que se desea y esto resulta en que se produzcan NAs.\n\nq &lt;- c(\"R\",\"S\",\"T\")\nclass(q)\n\n[1] \"character\"\n\nas.numeric(q)\n\nWarning: NAs introducidos por coerción\n\n\n[1] NA NA NA\n\nas.complex(q)\n\nWarning: NAs introducidos por coerción\n\n\n[1] NA NA NA\n\nas.integer(q)\n\nWarning: NAs introducidos por coerción\n\n\n[1] NA NA NA\n\nas.logical(q)\n\n[1]   NA   NA TRUE\n\n\n\n\n1.5.5 Listas\nLas listas son un tipo especial de vectores que pueden contener elementos de distintas clases. Las listas se pueden crear con la función list( ). Con la función vector( ) se puede crear una lista vacia.\n\nr &lt;- list(2.71, 2, \"m\", 3+2i, F)\nr\n\n[[1]]\n[1] 2.71\n\n[[2]]\n[1] 2\n\n[[3]]\n[1] \"m\"\n\n[[4]]\n[1] 3+2i\n\n[[5]]\n[1] FALSE\n\ns &lt;- vector(\"list\", length = 5)\ns\n\n[[1]]\nNULL\n\n[[2]]\nNULL\n\n[[3]]\nNULL\n\n[[4]]\nNULL\n\n[[5]]\nNULL\n\n\n\n\n1.5.6 Matrices\nLas matrices son vectores que tienen un atributo de dimensión, este atributo es en si mismo un vector entero de longitud 2 (número de filas y columnas).\n\nm &lt;- matrix(nrow = 3, ncol = 4)\nm\n\n     [,1] [,2] [,3] [,4]\n[1,]   NA   NA   NA   NA\n[2,]   NA   NA   NA   NA\n[3,]   NA   NA   NA   NA\n\ndim(m)\n\n[1] 3 4\n\nattributes(m)\n\n$dim\n[1] 3 4\n\n\nLas matrices son construidas por columna, de tal forma que los elementos de la matriz pueden comenzar a ser llenados desde la esquina superior izquierda recorriendo las columnas.\n\nm &lt;- matrix(1:12, nrow = 3, ncol = 4)\nm\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    4    7   10\n[2,]    2    5    8   11\n[3,]    3    6    9   12\n\n\nOtra forma de crear matrices es a partir de vectores añadiéndole los atributos de dimensión.\n\nm &lt;- 1:12\nm\n\n [1]  1  2  3  4  5  6  7  8  9 10 11 12\n\ndim(m) &lt;- c(3,4)\nm\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    4    7   10\n[2,]    2    5    8   11\n[3,]    3    6    9   12\n\n\nUna forma común de crear matrices es uniendo filas o columnas con las funciones rbind o cbind.\n\ns1 &lt;- 4:8\ns2 &lt;- 16:20\ncbind(s1, s2) # unión por columnas\n\n     s1 s2\n[1,]  4 16\n[2,]  5 17\n[3,]  6 18\n[4,]  7 19\n[5,]  8 20\n\nrbind(s1, s2) # unión por filas\n\n   [,1] [,2] [,3] [,4] [,5]\ns1    4    5    6    7    8\ns2   16   17   18   19   20\n\n\n\n\n1.5.7 Data frames\nLos data frames (marcos de datos, cuadros de datos) son usados para guardar datos tabulares en R. Son un tipo importante de objetos en R y son usados en muchas situaciones de modelación y análisis de datos. Los data frames a diferencia de las matrices pueden guardar diferentes clases de objetos en cada columna. Las matrices tienen un atributo de nombres de columnas (colnames) los data frames tienen además un atributo de nombres de filas (row.names).\nLos data frames pueden ser leídos con funciones como read.csv() o read.table(). También pueden ser creados con la función data.frame(), el metapaquete tidyverse tiene funciones que permiten trabajar de forma más eficiente con conjuntos de datos. El equivalente de data.frame() en el paquete dplyr de tidyverse es tibble(). Con la función str() se puede conocer la estructura de un data frame, la función de dplyr equivalente a str() es glimpse( )\n\ndf1 &lt;- data.frame(\n  Variable = c(\"Var1\",\"Var2\",\"Var3\",\"Var4\"),\n  Valor = c(12, 14, 13, 16)\n )\ndf1\n\n  Variable Valor\n1     Var1    12\n2     Var2    14\n3     Var3    13\n4     Var4    16\n\nstr(df1)\n\n'data.frame':   4 obs. of  2 variables:\n $ Variable: chr  \"Var1\" \"Var2\" \"Var3\" \"Var4\"\n $ Valor   : num  12 14 13 16\n\nglimpse(df1)\n\nRows: 4\nColumns: 2\n$ Variable &lt;chr&gt; \"Var1\", \"Var2\", \"Var3\", \"Var4\"\n$ Valor    &lt;dbl&gt; 12, 14, 13, 16\n\nnrow(df1)\n\n[1] 4\n\nncol(df1)\n\n[1] 2\n\ndf2 &lt;- tibble(\n  Variable = c(\"Var1\",\"Var2\",\"Var3\",\"Var4\"),\n  Valor = c(12, 14, 13, 16)\n )\ndf2\n\n# A tibble: 4 × 2\n  Variable Valor\n  &lt;chr&gt;    &lt;dbl&gt;\n1 Var1        12\n2 Var2        14\n3 Var3        13\n4 Var4        16\n\nstr(df2)\n\ntibble [4 × 2] (S3: tbl_df/tbl/data.frame)\n $ Variable: chr [1:4] \"Var1\" \"Var2\" \"Var3\" \"Var4\"\n $ Valor   : num [1:4] 12 14 13 16\n\nglimpse(df2)\n\nRows: 4\nColumns: 2\n$ Variable &lt;chr&gt; \"Var1\", \"Var2\", \"Var3\", \"Var4\"\n$ Valor    &lt;dbl&gt; 12, 14, 13, 16\n\nnrow(df2)\n\n[1] 4\n\nncol(df2)\n\n[1] 2\n\n\n\n\n\n\nAgwu, N., y Bialas, P. (2018). Using R/R Studio In An Introductory Statistics Course. 10(3).\n\n\nData Carpentry. (2020). Packages and libraries. En Introduction to R. Harvard Chan Bioinformatics Core (HBC). https://hbctraining.github.io/Intro-to-R-flipped/lessons/04_introR_packages.html\n\n\nIsmay, A. Y., Chester and Kim. (2022). Statistical Inference via Data Science. https://moderndive.com/index.html\n\n\nNavarrete, O., y Chávez, M. (2019). Estadística para Contadores y Auditores con R. Abya Yala.\n\n\nTucker, M. C., Shaw, S. T., Son, J. Y., y Stigler, J. W. (2022). Teaching Statistics and Data Analysis with R. Journal of Statistics and Data Science Education, 1-15. https://doi.org/10.1080/26939169.2022.2089410"
  },
  {
    "objectID": "01-concepts.html#etapas-del-proceso-estadístico.",
    "href": "01-concepts.html#etapas-del-proceso-estadístico.",
    "title": "2  Estadística. Conceptos Básicos.",
    "section": "2.1 Etapas del proceso estadístico.",
    "text": "2.1 Etapas del proceso estadístico.\nEl proceso estadístico tiene como principal entrada a los datos. Sin embargo, el proceso estadístico no empieza en los datos. De manera general las etapas del proceso estadístico son:\n\nIdentificación y delimitación del problema: Un problema en investigación debe ser entendido como una pregunta o cuestión sobre un tema o aspecto que no se conoce. Ejemplos de problema en agronomía pueden ser: comparación de producción lechera en vacas sometidas a diferentes dietas, la identificación de características fenotípicas de variedades de banano resistentes a determinada enfermedad, evaluación del rendimiento de un cultivar utilizando biocarbón en diferentes concentaciones, etc. La delimitación implica recortar el tema dentro de los límites de espacio, tiempo y área de estudio que caracteriza al problema. Por ejemplo, en el problema de la comparación de la producción lechera en vacas sometidas a diferentes dietas la delimitación puede incluir aspectos como, la época del año en que se va a recoger la información, las razas de animales a ser incluidas en el estudio, el lugar dónde se llevará a cabo el estudio. Dentro de esta fase se incluye la definición de los objetivos del estudio.\nPlanificación: Definir bien los objetivos ayuda a realizar una planificación adecuada. A partir de los objetivos se puede identificar los datos que se necesitan, el tipo de datos, la fuente de los datos, la frecuencia de recolección de los datos, la forma de recolección y almacenamiento de los datos y los programas o paquetes estadísticos que serán usados en el análisis.\nRecolección de datos: la recolección puede ser realizada de fuentes existentes como bases de datos de organismos como la FAO, ministerios de agricultura, cámaras de productores, etc. O los datos pueden provenir de experimentos diseñados para el propósito específico de cumplir con los objetivos planteados.\nRevisión de los datos: una vez que los datos son recogidos, es necesario revisarlos para verificar inconsistencias o problemas potenciales. Por ejemplo, al registrar las longitudes de hojas de cacao de ciertas accesiones es posible que ocurran cosas como valores mal ingresados. En estudios donde los datos son obtenidos de organismos como la FAO es probable que los datos hayan sido ingresados con un formato no apropiado.\nTabulación la tabulación permite dar una primera mirada a los datos y ayuda a obtener información sobre los datos. Esta tabulación puede ser presentada ya sea como tablas o como gráficos, lo que será discutido más adelante.\nAnálisis estadístico: en este paso se obtienen medidas de tendencia central, dispersión, posición, o asociación. Se hacen pruebas de hipótesis, o se realizan modelos con el fin de contestar las preguntas o cumplir los objetivos del estudio.\nInferencia: Basados en los resultados del análisis estadístico se hacen inferencias acerca de los objetivos del estudio. Aunque los datos provengan de una muestra, utilizando teorías estadísticas se puede llegar a conclusiones sobre la población de la que fueron tomadas las muestras."
  },
  {
    "objectID": "01-concepts.html#definiciones-importantes",
    "href": "01-concepts.html#definiciones-importantes",
    "title": "2  Estadística. Conceptos Básicos.",
    "section": "2.2 Definiciones importantes",
    "text": "2.2 Definiciones importantes\n\nPoblación: una población es el conjunto de todos los sujetos u objetos de interés en una investigación o análisis. Por ejemplo, en un estudio que tenga como objetivo determinar características fenotípicas de variedades de banano resistentes a cierta enfermedad en el trópico húmedo, la poblacion son todas las plantas de banano sembradas en el trópico húmedo.\nMuestra: es la parte de la población que es analizada, dicho de otra forma una muestra es un subconjunto de la población. Sigamos con el ejemplo de las características fenotípicas de variedades de banano resistentes a cierta enfermedad en el trópico húmedo, el investigador no va a tomar todas las plantas sino que va a escoger un grupo de plantas de las variedades de interés. La muestra debe representar lo mejor posible a la población. La parte de la estadística que comprende los métodos estadísticos para obtener muestras representativas de una población se llama muestreo\nParámetro: un parámetro es una cantidad numérica que caracteriza a una población.\nEstadístico: un estadístico es una cantidad numérica que caracteriza a una muestra."
  },
  {
    "objectID": "01-concepts.html#clasificación-de-la-estadística.",
    "href": "01-concepts.html#clasificación-de-la-estadística.",
    "title": "2  Estadística. Conceptos Básicos.",
    "section": "2.3 Clasificación de la estadística.",
    "text": "2.3 Clasificación de la estadística.\nDe manera general, la estadística se clasifica en dos grandes ramas : estadística descriptiva y estadística inferencial.\n\n\n\n\n\n\nImportante\n\n\n\nEstadística Descriptiva se refiere a los métodos para resumir los datos recogidos, estos datos pueden provenir de una muestra o de una población. Los resumenes de los datos pueden ser tablas, gráficos, y números como promedios o porcentajes.\n\n\n\n\n\n\n\n\nImportante\n\n\n\nEstadística Inferencial se refiere a los métodos para sacar conclusiones, hacer predicciones o tomar decisiones sobre una población, basándose en datos de una muestra perteneciente a una población.\n\n\nEn la Figura 2.1 se muestra la relación entre algunos conceptos revisados hasta ahora. Supongamos que en una finca lechera se desea hacer un estudio sobre el efecto de una dieta en la producción de leche en una determinada raza de vacas lecheras. El conjunto de todas las vacas representa a toda la población. El objetivo de estudio es determinar el rendimiento promedio de todas las vacas, esta medida de toda la población es un parámetro. Debido a ser un producto de prueba el estudio no es aplicado a toda la población, por lo que se utiliza técnicas de muestreo para escoger una muestra representativa, con estadística descriptiva se determina el rendimiento promedio de la muestra, este valor es un estadístico. Con técnicas de estadística inferencial se estima el valor del parámetro de interés.\n\n\n\nFigura 2.1: Relación entre algunos conceptos estadísticos"
  },
  {
    "objectID": "01-concepts.html#tipos-de-estudio",
    "href": "01-concepts.html#tipos-de-estudio",
    "title": "2  Estadística. Conceptos Básicos.",
    "section": "2.4 Tipos de estudio",
    "text": "2.4 Tipos de estudio\nSupongamos que un investigador desea analizar las tendencias de las exportaciones de maíz durante la última década en Latinoamérica y el Caribe, puede obtener esta información de la página FAOSTAT https://www.fao.org/faostat/en/#home. En este caso los datos no son recogidos directamente por el investigador sino que usa una fuente de información secundaria. Ahora supongamos que el mismo investigador quiere conocer la impresión de las medidas tomadas por el gobierno para ayudar a los pequeños productores de maíz, para registrar esto puede realizar una encuesta a una muestra de pequeños productores de maíz. Tanto al tomar datos de una fuente secundaria o al realizar una encuesta el investigador está observando los datos como aparecen y no está interviniendo en el problema que se investiga. Este tipo de estudios recibe el nombre de observacional\n\n\n\n\n\n\nImportante\n\n\n\nEstudio observacional se observan los datos como aparecen y no se interviene en el problema o fenómeno investigado. Un estudio observacional puede ser analítico o descriptivo\n\n\nAhora imaginemos que se desea evaluar los parámetros nutricionales y fermentativos de un tipo de pasto, así como la inclusión de diferentes niveles de maíz molido en el proceso de ensilaje. El investigador diseña un experimento utilizando microsilos experimentales para evaluar el efecto de incluir diferentes porcentajes de maíz molido en el ensilaje del pasto, el diseño de este experimento incluye la determinación del número de tratamientos y repeticiones. En este caso el investigador está manipulando los porcentajes de maíz molido para evaluar el efecto sobre los parámetros nutricionales y fermentativos del pasto. Este tipo de estudios recibe el nombre de experimental\n\n\n\n\n\n\nImportante\n\n\n\nEstudio experimental se interviene de manera intencionada y programada para manipular una o más variables con el fin de analizar los efectos de estas manipulaciones en otras variables"
  },
  {
    "objectID": "01-concepts.html#variables-clasificación-y-niveles-de-medición.",
    "href": "01-concepts.html#variables-clasificación-y-niveles-de-medición.",
    "title": "2  Estadística. Conceptos Básicos.",
    "section": "2.5 Variables, clasificación y niveles de medición.",
    "text": "2.5 Variables, clasificación y niveles de medición.\nEn un estudio sobre características fenotípicas de girasoles cultivadas en el trópico húmedo se registra información sobre el número de planta, el número de parcela donde se encuentra la planta, la variedad de girasol observada, el número de fila, la altura de las plantas, la circunferencia del tallo, el color de las flores, el número de pétalos de las flores y número de hojas. Estas características, medidas o valores de interés para la persona que investiga reciben el nombre de variables.\nEn la variable Variedad de Girasol se puede almacenar respuestas como Almonte, Ariadna, Candela, etc. Mientras que en la variable Color de las flores se puede registrar valores como Marfil, Amarillo pálido, Naranja, Púrpura, Rojo o Multicolor. Estas dos variables son variables cualitativas, pues describen una cualidad o categoría.\nEn las variables altura de las plantas, circunferencia del tallo, número de pétalos de las flores y número de hojas se almacenan respuestas numéricas. Estas variables son ejemplo de variables cuantitativas. Para la altura de las plantas en centímetros ejemplos de respuestas son \\(75.23\\), \\(92.15\\), etc. Mientras que para el número de pétalos o para el número de hojas las respuestas pueden ser, por ejemplo, \\(10\\), \\(5\\), \\(20\\), etc. Para el caso de la altura, como se observa, aceptamos respuestas con decimales, en este caso la variable es cuantitativa continua. La variable número de hojas es un ejemplo de variable cuantitativa discreta pues es una variable que solo acepta números enteros. En la Figura 2.2 se presenta un resumen de la clasificación de las variables.\nLas variables además presentan niveles de medición, estos pueden ser:\n\nOrdinal: toman valores que se ordenan o clasifican de forma lógica, ejemplos de variables con este nivel de medición pueden ser fila en que se encuentra una planta, nivel de aceptación de un producto (muy alto, alto, medio, bajo, muy bajo)\nNominal: toman valores que no se ordenan o clasifican de forma lógica, ejemplos de variables con este nivel de medición pueden ser variedad de semilla de maíz sembrada, raza de ganado sometida a una dieta.\nIntervalo: existe diferencia significativa entre valores pero el cero no representa la ausencia de la característica, es decir que el cero no es significativo, ejemplos de este nivel de medición son número de cajas de papaya exportadas en una semana, calificación obtenida en un examen.\nRazón: el 0 es significativo y la razón entre dos números es significativa, ejemplos de este nivel de medición son edad, altura de una planta, circunferencia del tallo de una planta.\n\n\n\n\n\n\nFigura 2.2: Clasificación de las variables"
  },
  {
    "objectID": "01-concepts.html#ejercicios",
    "href": "01-concepts.html#ejercicios",
    "title": "2  Estadística. Conceptos Básicos.",
    "section": "Ejercicios",
    "text": "Ejercicios\n\nEjercicio 2.1 Clasifique las siguientes variables en cuantitativas o cualitativas\n\n\nDiámetro del tallo de una planta de banano.\nNúmero de pétalos de una flor de girasol.\nAltura de una planta de tomate.\nPerímetro toráxico de un bovino\nRazas de ganado existentes en una finca lechera.\nVariedad de semillas usadas en un cultivo de banano.\nCantidad de fertilizante utilizado en una plantación.\nCajas de banano vendidas por semana.\nPrecipitación en milímetros de una región por año.\nRegión en la que se siembra cierta variedad de piña.\nFila en la que se encuetra una planta dentro de una parcela.\nTemperatura medida en grados Celsius\nTemperatura medida en grados Kelvin\n\n\nEjercicio 2.2 Clasifique las variables cuantitativas del Ejercicio 2.1 como continuas o discretas.\n\n\nEjercicio 2.3 Determine el nivel de medición de las variables cuantitativas del Ejercicio 2.1.\n\n\n\n\n\nAgresti, A., Franklin, C., y Klingenberg, B. (2023). Statistics. The Art and Science of Learning from Data (5a. ed.). Pearson.\n\n\nCleff, T. (2013). Exploratory Data Analysis in Business and Economics (1a. ed.). Springer. https://link.springer.com/book/10.1007/978-3-319-01517-0"
  },
  {
    "objectID": "02-estdesc.html#tablas-y-gráficos-para-resumir-datos",
    "href": "02-estdesc.html#tablas-y-gráficos-para-resumir-datos",
    "title": "3  Estadística Descriptiva",
    "section": "3.1 Tablas y gráficos para resumir datos",
    "text": "3.1 Tablas y gráficos para resumir datos\nUn primer paso en el análisis de datos es resumir los datos. En esta sección exploraremos dos formas de resumir la información usando tablas o gráficos.\nLas tablas y los gráficos se escogen de acuerdo al tipo de variable que está siendo analizada. Empezaremos por revisar las tablas para variables cualitativas y cuantitativas.\n\n3.1.1 Tablas para variables cualitativas\nUna tabla o tabla de frecuencias para variables cualitativas o categóricas generalmente tiene 3 columnas:\n\nCategoría: muestra el nombre de cada categoría. Vamos a suponer que en el conjunto de datos para nuestra variable de interés existen \\(k\\) categorías.\nFrecuencia: (\\(f_i\\)) la frecuencia o frecuencia absoluta corresponde al número de observaciones correspondientes a la categoría, la suma de todas las frecuencias absolutas debe ser igual al número de observaciones \\(n\\). \\(\\sum_{i=1}^{k} f_i=n\\)\n\n\n\n\n\n\n\nImportante\n\n\n\nEl símbolo \\(\\sum\\) se utiliza para representar la sumatoria de un conjunto de elementos. En este caso \\(\\sum_{i=1}^{k} f_i\\) se lee sumatoría desde \\(i\\) igual a \\(1\\) hasta \\(k\\) de \\(f_i\\).\n\n\n\nPorcentaje: el porcentaje se lo obtiene multiplicando la frecuencia relativa \\(h_i\\) por \\(100\\). La frecuencia relativa es igual a la frecuencia absoluta \\(f_i\\) dividida por el número \\(n\\) de observaciones. La frecuencia relativa también recibe el nombre de proporción. \\(h_i = \\dfrac{f_i}{n}\\)\n\nSupongamos que en un estudio se utilizaron 50 semillas de 3 variedades de tomate. En la Tabla 3.1 se muestra un resumen del número de semillas usadas de cada variedad, esta tabla es un ejemplo de una tabla para variables cualitativas. De la tabla se deduce que la menor proporción de semillas utilizadas corresponde a la variedad 2, mientras que la mayor proporción de semillas corresponde a la variedad 1.\n\n\n\n\nTabla 3.1: Ejemplo de tabla para variables cualitativas\n\n\nCategoría\nFrecuencia\nPorcentaje\n\n\n\n\nVariedad 1\n20\n40\n\n\nVariedad 2\n14\n28\n\n\nVariedad 3\n16\n32\n\n\n\n\n\n\n\n\n3.1.2 Tablas para variables cuantitativas\nUna tabla de frecuencias para variables cuantitativas tiene 6 columnas:\n\nClase: una clase es un intervalo semi abierto o semicerrado con la forma \\[\\left[ \\text{Límite Inferior}, \\text{Límite Superior} \\right)\\]\nMarca de Clase \\(X_i\\): es un valor igual al promedio de los dos límites de la clase. \\[X_i = \\dfrac{\\text{Límite Superior} + \\text{Límite inferior}}{2}  \\tag{3.1}\\]\nFrecuencia \\(f_i\\): la frecuencia es igual al número de observaciones de la variable que están dentro del intervalo o clase. También se la conoce como frecuencia absoluta.\nFrecuencia relativa \\(h_i\\): la frecuencia relativa se la calcula como la frecuencia dividida para el total de valores de la variable. \\[h_i = \\frac{f_i}{n} \\tag{3.2}\\]\nFrecuencia acumulada \\(F_i\\): se la calcula sumando las frecuencias desde la primera clase hasta la clase en consideración. \\[F_i = \\sum_{j=1}^{i}f_j  \\tag{3.3}\\]\nFrecuencia Relativa acumulada \\(H_i\\): se la calcula sumando las frecuencias relativas desde la primera clase hasta la clase en consideración. \\[F_i = \\sum_{j=1}^{i}h_j  \\tag{3.4}\\]\n\nExiten expresiones matemáticas que nos permiten conocer el número de clases necesarias y la amplitud de las clases sin embargo, por el enfoque de este texto en algunas ocasiones dejaremos eso a criterio del investigador o trabajaremos con las clases que por defecto obtengamos de las funciones que aprenderemos a usar de R.\nEl ingeniero Yorky Gil realizó un experimento con el fin de estimar una curva fenológica para el cultivo de girasol en condiciones del trópico humedo. Recogió datos durante 8 semanas de la altura en centímetros y el número de hojas de las plantas de girasol de determinada variedad. En la Tabla 3.2 se muestra la distribución de frecuencias de la altura para la semana 8. Este es un ejemplo de una tabla de frecuencias para variables cuantitativas. En secciones posteriores discutiremos paso a paso la elaboración de esta tabla.\nDe la interpretación de esta tabla se obtienen datos importantes. Si nos fijamos en la sexta clase podemos afirmar que en la semana \\(8\\), \\(78\\) observaciones es decir el \\(32.4\\%\\) de las plantas tenían una altura entre \\(130\\) y \\(154\\) centímetros. De la misma clase podemos decir que \\(196\\) plantas o el \\(81.3 \\%\\) tienen una altura menor a \\(154\\) centímetros. En la última clase se observa que la frecuencia absoluta acumulada es de \\(241\\), este número corresponde al \\(100\\%\\) de las observaciones.\n\n\n\n\nTabla 3.2: Ejemplo de tabla de frecuencia para variables cuantitativas\n\n\nClase\nMarca de Clase\nFrec.\nFrec. Rel.\nFrec. Acu.\nRel. Acu.\n\n\n\n\n[10,34)\n22\n2\n0.008\n2\n0.008\n\n\n[34,58)\n46\n6\n0.025\n8\n0.033\n\n\n[58,82)\n70\n21\n0.087\n29\n0.120\n\n\n[82,106)\n94\n39\n0.162\n68\n0.282\n\n\n[106,130)\n118\n50\n0.207\n118\n0.490\n\n\n[130,154)\n142\n78\n0.324\n196\n0.813\n\n\n[154,178)\n166\n29\n0.120\n225\n0.934\n\n\n[178,202)\n190\n13\n0.054\n238\n0.988\n\n\n[202,226)\n214\n3\n0.012\n241\n1.000\n\n\n\n\n\n\n\n\n3.1.3 Gráficos\n\n3.1.3.1 Diagrama de barras\nUn gráfico de barras es la representación visual de una tabla de distribución de frecuencias. En el eje de las \\(x\\) se colocan los niveles de la variable cualitativa y en el eje de las \\(y\\) los valores de las frecuencias o de los porcentajes. En la Figura 3.1 se presenta el gráfico de barras para la Tabla 3.1. Mientras que en la Figura 3.2 se muestra la relación entre estos dos objetos. En general cuando se tiene una variable categórica única que se quiere desglosar y cuantificar por cada categoría este es el tipo de gráfico adecuado.\n\n\n\n\n\nFigura 3.1: Gráfico de Barras para la Tabla 3.1\n\n\n\n\n\n\n\nFigura 3.2: Relación entre la Tabla 3.1 y la Figura 3.1\n\n\n\n\n3.1.3.2 Diagrama de barras agrupadas\nEn un diagrama de barras agrupadas, al igual que en un diagrama de barras, se muestran los conteos para un grupo, pero además se desglosa para una variable cuantitativa adicional. Por ejemplo en la Figura 3.3 se muestran los porcentajes de nitrógeno, fosforo y potasio para cuatro variedades diferentes de maíz.\n\n\n\n\n\nFigura 3.3: Diagrama de Barras Agrupadas\n\n\n\n\n\n\n3.1.3.3 Diagrama de barras apiladas\nUna variación muy útil de los diagramas de barras son los diagramas de barras apiladas. A diferencia de los diagramas de barras agrupadas en este caso se apilan las barras una sobre otra. Esto es útil cuando las barras suman un \\(100 \\%\\). En la Figura 3.4 se muestra la relación Humedad, Materia Seca para cuatro variedades de maíz.\n\n\n\n\n\nFigura 3.4: Diagrama de Barras Apiladas\n\n\n\n\n\n\n3.1.3.4 Histograma\nUn histograma es un gráfico que utiliza barras para representar las frecuencias absolutas o las frecuencias relativas de los posibles resultados de una variable cuantitativa y ayuda a entender los valores que se tienen en un conjunto de datos, cuando hablamos de un histograma o histograma de frecuencias nos referimos a las frecuencias absolutas. Con un histograma se puede conocer la forma, el centro y la variabilidad de la distribución. La altura de las barras corresponde a las frecuencias absolutas.\nEs importante tener en cuenta que un histograma no debe ser usado para hacer inferencias ya que nos dan una rápida visión de la distribución de los datos y solo sugieren información sobre ciertas características. En la Figura 3.5 se aprecia el histograma de la altura de los girasoles. En la figura Figura 3.6 se esquematiza la relación entre la tabla de frecuencias y el histograma de frecuencias absolutas.\n\n\n\n\n\nFigura 3.5: Histograma de la altura de girasoles\n\n\n\n\n\n\n\nFigura 3.6: Relación entre la Tabla 3.2 y la Figura 3.5\n\n\nEn algunas ocasiones es de interés graficar las frecuencias relativas. El histograma de las frecuencias relativas tiene la misma forma que el histograma de las frecuencias absolutas, pero las alturas ahora corresponden a las frecuencias relativas. En la Figura 3.7 se muestra el histograma de frecuencias relativas para las alturas de los girasoles. Se puede apreciar que este histograma tiene la misma forma que el histograma de la Figura 3.5.\n\n\n\n\n\nFigura 3.7: Histograma de frecuencias relativas para las alturas de los girasoles\n\n\n\n\n\n\n\nFigura 3.8: Relación entre la Tabla 3.2 y la Figura 3.7\n\n\n\n\n3.1.3.5 Gráficos de densidad\nUn gráfico de densidad es una representación de la distribución de una variable numérica. Es una versión suavizada del histograma. Los gráficos de densidad son usados para estudiar la distribución de una variable. Los picos de un gráfico de densidad muestran donde los se concentran los valores en el rango de la variable. Una ventaja que tienen los gráficos de densidad sobre los histogramas es que son mejores para determinar la forma de la distribución de los datos porque no se ven afectados por el número de barras usadas.\n\n\n\n\n\nFigura 3.9: Gráfico de Densidad para la altura de los girasoles\n\n\n\n\n\n\n3.1.3.6 Diagramas de caja\nUn diagrama de caja resume los valores numéricos de una variable categórica, pero no se limitan solamente a la comparación de los valores sino que además ofrece una idea del rango de valores que puede tomar cada categoría dentro de la variable. En la Figura 3.10 se muestra el diagrama de caja para la altura de plantas de caña de azúcar que fueron sometidas a 3 tratamientos diferentes de riego y fertilización, estas mediciones corresponden a los 149 días después de la siembra.\nPara la interpretación de un diagrama de caja principalmente hay que fijarse en la línea central de la caja. Este valor corresponde a la mediana, en secciones posteriores desarrollaremos este concepto, por el momento podemos decir que el \\(50 \\%\\) de los valores son menores a esta cantidad. Cuando la distribución de los datos es simétrica, la mediana se ubicará justo en el centro de la caja. Cuando la distribución de los datos es sesgada, la mediana estará posicionada más cerca de la parte superior o inferior de la caja. Los puntos que se ven sobre o bajo la caja son considerados valores atípicos. En secciones subsiguientes se desarrollarán en detalle los conceptos de sesgo, simetría y valores atípicos.\n\n\n\n\n\nFigura 3.10: Diagrama de Caja para la Altura de plantas de caña de azúcar 149 días después del día de siembra\n\n\n\n\n\n\n3.1.3.7 Gráficos de líneas\nEstos gráficos son útiles para mostrar la tendencia de una variable cuantitativa en el tiempo. En la Figura 3.11 se muestra la evolución de la altura de las plantas de caña separadas por tratamiento.\n\n\n\n\n\nFigura 3.11: Evolución de la altura de las plantas de caña de azúcar"
  },
  {
    "objectID": "02-estdesc.html#medidas-numéricas-de-resumen",
    "href": "02-estdesc.html#medidas-numéricas-de-resumen",
    "title": "3  Estadística Descriptiva",
    "section": "3.2 Medidas numéricas de resumen",
    "text": "3.2 Medidas numéricas de resumen\nUna medida numérica de resumen es un número único que se calcula a partir de una muestra que transmite una característica específica de toda la muestra. Las medidas numéricas sirven para medir la tendencia central, la dispersión o la posición de los datos.\n\n3.2.1 Medidas de tendencia central\nLas medidas de tendencia central indican alrededor de qué valor se centra, agrupa o aglutina la mayoría de datos. Existen algunas medidas de tendencia central. Como se mencionó antes, en todas se combina la información de una muestra en un único número y cada medida tiene ventajas y desventajas en su uso.\n\n3.2.1.1 Media\n\nDefinición 3.1 La media o media aritmética es simplemente el promedio de los valores observados. Es decir, para los \\(n\\) valores de una muestra \\(x_1,\\,x_2, \\ldots,\\,x_n\\) la media muestral \\(\\bar{x}\\) se define como la suma de todos los valores dividida para el número de valores:\n\\[\n\\bar{x}= \\dfrac{\\sum_{i=1}^nx_i}{n}\n\\tag{3.5}\\]\nLa media poblacional es denotada por la letra griega \\(\\mu\\), en este caso se divide para \\(N\\) que representa el tamaño poblacional.\n\\[\n\\mu = \\dfrac{\\sum_{i=1}^Nx_i}{N}\n\\tag{3.6}\\]\n\n\n\n\n\n\n\nImportante\n\n\n\nPropiedades de la media\n\nSi a todos los valores \\(\\left\\{x_1, x_2, \\ldots,x_n \\right\\}\\) de una variable \\(x\\) con media \\(\\bar{x}\\) se les suma una constante \\(k\\), la nueva media es \\(\\bar{x}+k\\)\nSi todos los valores \\(\\left\\{x_1, x_2, \\ldots,x_n \\right\\}\\) de una variable \\(x\\) con media \\(\\bar{x}\\) se los multiplica por una constante \\(k\\), la nueva media es \\(\\bar{x}k\\)\nSi todos los valores \\(\\left\\{x_1, x_2, \\ldots,x_n \\right\\}\\) de una variable \\(x\\) con media \\(\\bar{x}\\) se los divide por una constante \\(k\\) diferente de \\(0\\), la nueva media es \\(\\dfrac{\\bar{x}}{k}\\)\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nVentajas de la media\n\nEs fácil de entender y calcular.\nDepende de todos los valores.\nEs susceptible de cálculos aritméticos posteriores.\nNo se ve afectada por las fluctuaciones producto del muestreo\n\nDesventajas de la media\n\nEs susceptible a valores extremos.\nAl depender de todos los valores de un conjunto de datos, si existe uno o varios valores perdidos no es posible calcularla.\nNo se usa para variables cualitativas.\n\n\n\n\n\n3.2.1.2 Media geométrica\n\nDefinición 3.2 La media geométrica \\(MG\\) de un conjunto de \\(n\\) observaciones \\(\\left\\{x_1, x_2, \\ldots,x_n \\right\\}\\) se define como la raíz enésima del producto de todas las observaciones. Entonces la media geométrica \\(MG\\) viene dada por:\n\\[\nMG = \\sqrt[n]{x_1 \\, x_2\\, \\ldots \\,x_n} = \\sqrt[n]{\\Pi_{i=1}^{n} x_i}\n\\tag{3.7}\\]\n\n\n\n\n\n\n\nImportante\n\n\n\nPropiedades de la media geométrica\n\nLa media geométrica es menor que la media aritmética.\nEl producto de los valores de un conjunto de datos se mantiene si cada término es reemplazado por la media geométrica. \\[x_1 \\times x_2 \\times \\ldots \\times x_n = \\overbrace{GM_x \\times \\cdots \\times GM_x}^{n\\,veces}  \\tag{3.8}\\]\nLa media geométrica del cociente de las observaciones correspondientes en dos series es igual a los cocientes de sus medias geométricas.\nLa media geométrica del producto de las observaciones correspondientes en dos series es igual a los productos de sus medias geométricas.\n\n\n\n\n\n\n\n\n\nTip\n\n\n\n¿Cuándo usar la media aritmética o la media geométrica? La media \\(\\bar{x}\\) es usada en la mayoría de las situaciones, sin embargo, la media geométrica \\(GM\\) es preferida cuando los cambios en los valores de una distribución ocurren de forma multiplicativa. Es decir que se la puede usar para promediar datos que siguen progresiones geométricas, por ejemplo razones, interés compuesto, tasas de depreciación, crecimientos de bacterias en microbiología. La media geométrica es muy útil para construir índices\n\n\nLos valores atípicos son valores que están muy lejos del resto de los datos. Cuando un conjunto de datos tiene valores atípicos la media podría no ser la mejor medida de tendencia central para describirlo. Los valores atípicos tienen mucha influencia sobre la media y tienden a arrastrar la media en dirección hacia ellos.\n\n\n3.2.1.3 Mediana\n\nDefinición 3.3 La mediana muestral denotada con \\(\\tilde{x}\\) de \\(n\\) observaciones \\(x_1,\\,x_2,\\,\\ldots,x_n\\) es el valor central cuando las observaciones están ordenadas en forma ascendente. Cuando el número de observaciones es impar, la mediana es el único valor que está en la mitad de los datos. Mientras que cuando el número de observaciones es par, la mediana es el promedio de los dos valores centrales. En términos matemáticos, supongamos que \\(\\left\\{X\\right\\}\\) denota al conjunto de datos \\(X\\) ordenado de forma ascendente y \\({X}_i\\) representa el i-ésimo elemento del conjunto ordenado. La mediana \\(\\tilde{x}\\) es:\n\\[\n\\tilde{x} = \\begin{cases}\n      \\left \\{ X \\right\\}_{\\frac{n+1}{2}} & ; n \\quad \\textrm{impar}  \\\\\n      \\dfrac{\\left \\{ X  \\right \\}_{\\frac{n}{2}} + \\left \\{ X  \\right \\}_{\\frac{n}{2}+1} }{2} & ; n \\quad \\textrm{par}\n   \\end{cases}\n\\tag{3.9}\\]\n\n\n\n\n\n\n\nTip\n\n\n\nVentajas de usar la mediana\n\nEs fácil de calcular y comprender\nSolo existe una mediana para un conjunto de datos.\nNo se ve afectada por valores extremos\nSe puede determinar para escalas ordinales, nominales, de razón e intervalo\n\nDesventajas de usar la mediana\n\nNo toma en cuenta el valor exacto de cada dato y por tanto no usa toda la información disponible.\nSi se agrupan los valores de dos grupos, la mediana de cada grupo no puede ser expresada en términos del grupo agrupado. Dicho de otra forma si se calculan las medianas de subconjuntos de un conjunto de datos, estas medianas no pueden ser combinadas para calcular la mediana de todo el conjunto.\n\n\n\n\n\n3.2.1.4 Moda\n\nDefinición 3.4 La moda denotada por \\(Mo\\) es el valor que tiene la mayor frecuencia absoluta. Hay conjuntos de datos que no tienen moda, también existen conjuntos de datos con más de una moda. A un conjunto de datos con 2 modas se los llama bimodal, cuando existen más de 2 modas un conjunto recibe el nombre de multimodal.\n\n\n\n\n\n\n\nTip\n\n\n\nVentajas de usar la moda\n\nFácil de determinar.\nSe puede usar para datos con escala nominal u ordinal.\n\nDesventajas de usar la moda\n\nDebido a que la moda no está definida algebraicamente no se acostumbra a usarla en análisis estadístico.\n\n\n\n\n\n\n3.2.2 ¿Cómo escoger la medida de tendencia central adecuada?\nEn la mayoría de situaciones se prefiere la media como la medida de tendencia central que se reporta, sin embargo, en algunas situaciones se recomienda usar la mediana por ejemplo:\n\nHay algunos valores extremos en la distribución.\nAlgunas observaciones tienen valores no determinados.\nLos datos se miden en una escala ordinal\n\nCuando los datos se encuentran en una escala nominal, se prefiere a la moda.\n\n\n3.2.3 Simetría y sesgo\nLa forma de una distribución unimodal, puede ser simétrica o sesgada. Una distribución es simétrica si hacia la derecha y la izquierda de un valor central tiene la misma forma como se observa en el histograma de la Figura 3.14, además en esta figura se muestra un diagrama de caja y un gráfico de densidad para una distribución simétrica.\nUna distribución es sesgada a la derecha si la cola derecha es más larga que la izquierda, en la Figura 3.12 se muestran el histograma, el diagrama de caja y el gráfico de densidad para una distribución sesgada a la derecha. Finalmente, cuando la cola izquierda es más larga que la derecha la distribución es sesgada a la izquierda en la Figura 3.13 se aprecia una distribución sesgada a la izquierda.\nEntre el sesgo y las medidas de tendencia central existen las siguientes relaciones.\n\nCuando la distribución es sesgada a la derecha se cumple \\(Mo&lt; \\tilde{x}&lt; \\bar{x}\\). En el gráfico de densidad de la Figura 3.12 la línea vertical de color azul representa la moda, la línea vertical de color rojo representa a la mediana y la línea vertical de color naranja representa la media\n\nCuando la distribución es sesgada a la izquierda se cumple que \\(\\bar{x} &lt; \\tilde{x} &lt; Mo\\). Con los mismos códigos de colores anteriores podemos observar la ubicación de estos valores en la Figura 3.13.\nCuando la distribución es simétrica se cumple que \\(\\bar{x} = \\tilde{x} = Mo\\).\n\n\n\n\nFigura 3.12: Distribución sesgada a a la derecha\n\n\n\n\n\nFigura 3.13: Distribución sesgada a a la izquierda\n\n\n\n\n\nFigura 3.14: Distribución Simétrica\n\n\n\n\n\n3.2.4 Medidas de dispersión\nSupongamos que en una empresa distribuidora de agroquímicos se forman dos equipos de ventas, la empresa ofrece un bono al equipo que tiene el mejor desempeño en las ventas mensuales promedio. En la Tabla 3.3 se muestra el mínimo, la media, la mediana, el máximo y el total para las ventas mensuales de ambos equipos. Se observa que ambos equipos vendieron la misma cantidad total durante el mes por lo que tuvieron la misma media para las ventas mensuales. Es decir, que si se quisiera escoger al mejor equipo por el total de ventas mensuales o por el promedio de ventas mensuales no hay un equipo que haya tenido un mejor desempeño. Por otro lado el equipo 2 tiene un valor mínimo menor que el equipo 1 y en cuanto al máximo el equipo 2 tiene un valor máximo mayor al del equipo 1, esto nos llevaría a pensar que aunque ambos equipos tienen la misma media mensual la distribución de los datos para ambos equipos es diferente.\nEn la Figura 3.15 se muestra un gráfico de puntos de las ventas por equipo, se ha incluido una línea punteada de color negro en la media de ambos conjuntos (\\(20000.00\\)), con este gráfico se puede notar que las ventas del equipo 2 están más dispersas que las ventas del equipo 1. El histograma que se muestra en la Figura 3.16 permite visualizar la distribución de las ventas, y finalmente en el diagrama de caja de la Figura 3.17 se aprecia que el equipo 2 tuvo valores atípicos en sus ventas.\n\n\n\n\nTabla 3.3: Estadística descriptiva de las ventas por Equipo\n\n\nEquipo\nMínimo\nMedia\nMediana\nMáximo\nTotal\n\n\n\n\nTeam1\n18174.56\n20000.00\n19946.35\n21620.26\n400000.00\n\n\nTeam2\n16947.96\n20000.00\n20033.14\n22918.67\n400000.00\n\n\n\n\n\n\n\n\n\n\n\nFigura 3.15: Gráfica de puntos de las ventas por equipo\n\n\n\n\n\n\n\n\n\nFigura 3.16: Histograma de las ventas por equipo\n\n\n\n\n\n\n\n\n\nFigura 3.17: Diagrama de caja de las ventas por equipo\n\n\n\n\nRegresando a nuestra pregunta inicial ¿qué equipo tiene un mayor desempeño en sus ventas mensuales? Para contestar esta pregunta podemos calcular la dispersión de los datos, esta cuantificación la haremos con las tres medidas de dispersión más usadas.\n\n3.2.4.1 Rango\nEl rango es la medida de dispersión más fácil de calcular, resulta de la diferencia entre el máximo y el mínimo de un conjunto de datos.\n\\[\nRango = \\text{Máximo} - \\text{Mínimo}\n\\]\n\n\n3.2.4.2 Varianza poblacional y muestral\nUna forma de definir la dispersión es “la desviación de los datos respecto a la media”. La desviación de una observación respecto a la media se la calcula como la diferencia entre la observación y la media, supongamos un conjunto \\(x\\) de \\(n\\) observaciones \\(x_1,\\, x_2,\\, \\ldots, x_n\\) la desviación i-ésima respecto a la media es igual a \\(x_i-\\bar{x}\\). La media puede ser interpretada como un punto de balance por lo que en un conjunto cualquiera de \\(n\\) observaciones las desviaciones respecto a la media positivas (\\(x_i-\\bar{x}&gt;0\\)) hacen contrapeso a las desviaciones respecto a la media negativas (\\(x_i-\\bar{x}&lt;0\\)), es decir que \\(\\sum_{i=1}^n(x_i-\\bar{x})=0\\). Por esta razón las medidas de dispersión respecto a la media utilizan las desviaciones cuadráticas o el valor absoluto de estas.\n\nDefinición 3.5 La varianza poblacional que se denota con \\(\\sigma^2\\) se la calcula como el promedio de las desviaciones cuadráticas respecto a la media:\n\\[\n\\sigma^2 = \\dfrac{\\sum_{i=1}^N(x_i-\\mu)^2}{N}\n\\tag{3.10}\\]\n\n\nDefinición 3.6 La varianza muestral que se denota con \\(s^2\\) se la calcula con la expresión: \\[\ns^2 = \\dfrac{\\sum_{i=1}^n(x_i-\\bar{x})^2}{n-1}\n\\tag{3.11}\\]\n\n\n\n3.2.4.3 Desviación poblacional y muestral\n\nDefinición 3.7 La varianza poblacional o muestral está expresada en unidades cuadráticas, para nuestro ejemplo de las ventas la varianza se expresaría en dólares al cuadrado. Es más fácil interpretar la raíz cuadrada de la varianza. Esta raíz cuadrada se llama desviación estándar. La desviación estándar poblacional se la calcula con:\n\\[\n\\sigma = \\sqrt{\\sigma^2} = \\sqrt{\\dfrac{\\sum_{i=1}^N(x_i-\\mu)^2}{N}}\n\\tag{3.12}\\]\nLa desviación estándar muestral se la calcula con:\n\\[\ns = \\sqrt{s^2} = \\sqrt{\\dfrac{\\sum_{i=1}^n(x_i-\\bar{x})^2}{n-1}}\n\\tag{3.13}\\]\n\n\n\n\n3.2.5 Medidas de posición\nLas medidas de posición no central permiten conocer otros puntos característicos de la distribución que no son los valores centrales. Entre las medidas de posición no central más importantes están los cuantiles. El término cuantil fue usado por primera vez por Kendall en 1940.\nEl cuantil de orden \\(p\\) de una distribución con \\(0&lt;p&lt;1\\) es el valor \\(x_{i}\\) de la variable \\(X\\) que marca un corte de modo que una proporción \\(p\\) o un porcentaje \\(100p\\)% de valores de la población es menor o igual que \\(x_{i}\\) Por ejemplo el cuantil de orden \\(0.35\\) dejaría un 35% de valores por debajo de él.\n\n3.2.5.1 Tipos de Cuantiles\n\nCuartiles: son 3 valores (\\(Q_{1}, Q_{2}, Q_{3}\\)) que dividen a la distribución en 4 partes iguales.\nQuintiles: son 4 valores (\\(K_{1}, K_{2}, K_{3}, K_{4}\\)) que dividen a la distribución en 5 partes iguales.\nDeciles: son 9 valores (\\(D_1, D_2, D_3, D_4, D_5, D_6, D_7, D_8, D_9\\)) que dividen a la distribución en 10 partes iguales.\nPercentiles, son 99 valores (\\(P_1, P_2, \\ldots P_{99}\\)) que dividen a la distribución en 100 partes iguales.\n\n\n\n\nFigura 3.18: Cuantiles\n\n\n\n\n3.2.5.2 Cálculo de cuantiles\nEs fácil darse cuenta que existen equivalencias importantes entre los cuantiles, algunos ejemplos de estas equivalencias:\n\n\\(D_5=Q_2=P_{50}\\)\n\\(D_4=K_2=P_{40}\\)\n\\(D_3=P_{30}\\)\n\nSe deduce entonces que no es necesario tener una expresión para cada tipo de cuantiles, basta con conocer una expresión para calcular percentiles. Para esto debemos conocer dos cosas:\n\nLa posición del percentil en nuestro conjunto de datos.\nEl valor del percentil tomando en cuenta su posición.\n\nPara calcular la posición del percentil \\(i\\) que acumula el 100\\(p\\)% en un conjunto de datos no agrupado \\(X\\), de tamaño \\(n\\) y ordenado en forma ascendente primero determinamos la posición del percentil con la expresión:\n\\[\n  \\text{Posición} = p(n-1)+1\n\\tag{3.14}\\]\nPara determinar el valor \\(X_{i.a}\\) utilizamos la expresión:\n\\[\n  X_{i.a}=X_{i}+0.a(X_{i+1}-X_{i})\n\\tag{3.15}\\]\n\n\n3.2.5.3 Relación entre los cuartiles y el diagrama de caja.\nEn la Sección 3.1.3.6 se dijo que la línea central de la caja corresponde a la mediana de los datos, ahora que conocemos a los cuartiles es útil saber cuál es la relación entre los cuartiles y los diagramas de caja. En la Figura 3.19 se muestran las partes del diagrama de cajas. El límite inferior y el límite superior se calculan en función del rango intercuartílico (\\(IQR\\) por sus siglas en inglés) que es igual a la diferencia entre el tercer y primer cuartil.\n\\[\nIQR = Q_3 - Q_1\n\\tag{3.16}\\]\nEl límite superior (\\(LS\\)) y el límite inferior (\\(LI\\)) se calculan con las siguientes expresiones, respectivamente:\n\\[\nLS = Q_3 + 1.5IQR\n\\tag{3.17}\\]\n\\[\nLI = Q_1 - 1.5IQR\n\\tag{3.18}\\]\n\n\n\nFigura 3.19: Partes de un diagrama de caja"
  },
  {
    "objectID": "02-estdesc.html#sec-pprs",
    "href": "02-estdesc.html#sec-pprs",
    "title": "3  Estadística Descriptiva",
    "section": "3.3 Primeros pasos en RStudio. Elaboración de gráficos y obtención de medidas de resumen.",
    "text": "3.3 Primeros pasos en RStudio. Elaboración de gráficos y obtención de medidas de resumen.\nEn el proceso de análisis de datos, adicional a los scripts, la mayoría de ocasiones es necesario tener los datos almacenados en algún directorio de la computadora (en algunas ocasiones los datos se leen desde internet). Las tablas y los gráficos que se generen, también pueden ser almacenados en la computadora. Una forma de manejar esto de forma eficiente es trabajando con directorios de trabajo, un directorio de trabajo es una ruta dentro de la computadora que especifica la ubicación predeterminada de los archivos que leamos en R o que guardemos desde R.\n\n\n\n\n\n\nTip\n\n\n\n\nPara conocer el directorio de trabajo actual se usa la función getwd().\nPara fijar el directorio de trabajo se usa la función setwd(dir = \"directorio\")\n\n\n\n\n3.3.1 Creación de proyectos en RStudio\nRStudio tiene una forma más eficiente de manejar los directorios de trabajo, utilizando proyectos. Un proyecto es simplemente un directorio de trabajo designado con un archivo de extensión .Rproj. Al momento de abrir un proyecto, se configura automáticamente el directorio de trabajo como el directorio donde se encuentra el archivo .Rproj.\nUna buena práctica es crear un proyecto en RStudio por cada investigación, tarea o proyecto de análisis que se desee trabajar. Dentro de la carpeta del proyecto es recomendable tener subcarpetas que permitan almacenar los datos que van a ser leídos y producidos como parte de nuestro análisis. Una sugerencia es tener cuatro carpetas como mínimo:\n\ndatos: en esta carpeta se encuentran los datos que van a ser analizados.\ngraficos: para guardar los gráficos producidos.\nresultados: para guardar las tablas resultado del análisis de datos.\nscripts: en esta carpeta se guardan todos los scripts utilizados en el análisis.\n\nEn este texto se utilizará un solo proyecto al que llamaremos r4agro. En cualquier ubicación de nuestra computadora vamos a crear la carpeta llamada r4agro y dentro de esta carpeta las carpetas datos, graficos, resultados y scripts como se muestra en la Figura 3.20.\n\n\n\nFigura 3.20: Carpeta del proyecto r4agro\n\n\nPara crear un proyecto, se debe dar clic en File -&gt; New Project y aparecerá la ventana mostrada en la Figura 3.21.\n\n\n\nFigura 3.21: Crear un nuevo proyecto\n\n\nEscogemos la opción de acuerdo a nuestras necesidades:\n\nNew Directory: escogemos esta opción si vamos a crear un nuevo directorio desde 0. Cuando se da clic, aparece una nueva ventana como se muestra en la Figura 3.22\n\n\n\n\nFigura 3.22: Opción New Directory\n\n\n\nExisting Directory: escogemos esta opción si ya tenemos creada la carpeta de nuestro proyecto. En este libro vamos a trabajar siempre escogiendo esta opción. Más adelante explicaremos en detalle como crear un proyecto escogiendo esta opción.\nVersion Control: El control de versiones ayuda a los equipos de desarrollo de software a controlar y gestionar los cambios en el código fuente a lo largo del tiempo. Los programas y plataformas de control de versiones mantienen un registro de las modificaciones hechas al código. Si se comete un error, los desarrolladores pueden comparar versiones anteriores del código para ayudar a corregir el error al tiempo que se minimizan las molestias para todos los miembros del equipo. RStudio trabaja con dos sistemas de código abierto para el control de versiones: Git y Subversion.\n\n\n\n\n\n\n\nCreación de proyectos (Existing Directory)\n\n\n\n\nFile -&gt; New Project\nExisting Directory\nSe abre una ventana como la de la Figura 3.23 y damos clic en Browse.\nSe abre una ventana en la que buscamos la ubicación de la carpeta de nuestro proyecto y damos clic en Open (Figura 3.24).\nPosteriormente, escogemos la opción Create New Project (Figura 3.25).\nFinalmente, el proyecto se crea. Identificamos que el proyecto ha sido creado porque ahora aparece el nombre del proyecto en las esquinas superior izquierda y derecha de nuestra ventana de RStudio (Figura 3.26).\n\n\n\n\n\n\nFigura 3.23: Existing Directory\n\n\n\n\n\nFigura 3.24: Escoger carpeta\n\n\n\n\n\nFigura 3.25: Crear proyecto\n\n\n\n\n\nFigura 3.26: Proyecto creado\n\n\n\n\n3.3.2 Creando visualizaciones con ggplot2.\n\n3.3.2.1 Los datos\nEn esta sección trabajaremos con el conjunto de datos alt_almacigo.csv, este conjunto de datos corresponde a las alturas de 105 plantas de tomate de 5 variedades, 20 días después de la siembra en los almácigos. Las variables presentes en el archivo son:\n\nPlanta: número de planta estudiada.\nVariedad: variedad de la planta.\nDDS: días después de siembra.\nAltura: altura de la planta en centímetros.\nNHV: Número de hojas verdaderas.\n\nEn la Sección 3.3.2.3, explicaremos paso a paso como obtener el gráfico mostrado en la figura Figura 3.27:\n\n\n\n\n\nFigura 3.27: Diagrama de barras de las variedades de tomate\n\n\n\n\n\n\n3.3.2.2 Cargar paquetes y leer datos\nEl primer paso es guardar nuestros datos en la carpeta datos de nuestro proyecto, creado anteriormente, r4agro. Posteriormente creamos un script, en esta oportunidad guardaremos nuestro script en la carpeta scripts con el nombre 01_visualizacion.R.\nExisten muchas formas de trabajar en un script, sin embargo, se recomienda seguir el siguiente flujo:\n\n\n\n\n\n\nTip\n\n\n\n\nCargar los paquetes que sean necesarios para el análisis que se va a trabajar.\nCargar los datos que se van a utilizar en el análisis.\nTrabajar con los datos, esto incluye realizar gráficos, analizar los datos o crear modelos.\n\n\n\nEn este primer script trabajaremos solamente con los paquetes dplyr y ggplot2 descritos en la Sección 1.4. En las primeras líneas escribiremos las siguientes líneas de código.\n\nlibrary(dplyr)\nlibrary(ggplot2)\n\nUna vez cargados los paquetes procedemos a leer los datos. El archivo con el que vamos a trabajar es un archivo de valores separados por comas (comma ¨separated values). Existen muchas funciones que podemos usar para leer este tipo de archivos, sin embargo, vamos a trabajar con la función read.csv. Para no cometer errores al momento de la lectura de los datos es importante identificar si nuestros valores efectivamente están separados por coma (,) y si el archivo utiliza el punto (.) como separador de decimales. El archivo de nuestros datos tiene como separador de los valores el punto y coma, y como separador de decimales la coma.\n\n\n\n\n\n\nImportante\n\n\n\n\nUn archivo csv no necesariamente, tiene sus valores separados por coma. Dependiendo del sistema operativo o la región geográfica, los valores se guardan separados por coma (,) o por punto y coma (;).\nSi los valores están separados por coma, generalmente el separador de decimales es el punto (.).\nCuando los valores están separados por punto y coma, el separador de decimales es la coma.\n\n\n\nPara leer los datos escribimos la siguiente línea de código.\n\ndatos &lt;- read.csv(\"datos/alt_almacigo.csv\",sep = \";\", dec = \",\")\n\n\n\n\n\n\n\nEntendiendo el código\n\n\n\n\n\n\nFigura 3.28: Leer datos con la función read.csv()\n\n\n\n\nUna vez cargados los datos podemos empezar por ver las variables y los tipos de datos en nuestro conjunto leído, para esto podemos usar la función str() o la función glimpse().\n\n\n\n\n\n\nTip\n\n\n\n\nstr() permite ver la estructura interna de un objeto. Pertenece al R base.\nglimpse() se utiliza para ver las columnas del conjunto de datos y mostrar una parte de los datos con respecto a cada atributo que pueda caber en una sola línea.\n\n\n\n\nstr(datos)\n\n'data.frame':   105 obs. of  5 variables:\n $ Planta  : int  1 2 3 4 5 6 7 8 9 10 ...\n $ Variedad: chr  \"BN\" \"BN\" \"BN\" \"BN\" ...\n $ DDS     : int  20 20 20 20 20 20 20 20 20 20 ...\n $ Altura  : num  2.3 1.7 3.5 2.6 0.5 2.5 3 2.8 1.7 2.8 ...\n $ NHV     : num  0 0 1 1 0 2 1 1 0 1 ...\n\nglimpse(datos)\n\nRows: 105\nColumns: 5\n$ Planta   &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18…\n$ Variedad &lt;chr&gt; \"BN\", \"BN\", \"BN\", \"BN\", \"BN\", \"BN\", \"BN\", \"BN\", \"BN\", \"BN\", \"…\n$ DDS      &lt;int&gt; 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 2…\n$ Altura   &lt;dbl&gt; 2.3, 1.7, 3.5, 2.6, 0.5, 2.5, 3.0, 2.8, 1.7, 2.8, 2.4, 3.4, 4…\n$ NHV      &lt;dbl&gt; 0, 0, 1, 1, 0, 2, 1, 1, 0, 1, 1, 2, 2, 2, 2, 1, 0, 1, 1, 2, 0…\n\n\nLa salida de la función str() nos muestra que nuestro objeto datos es un data frame de 105 observaciones y 5 variables. Las variables Planta y DDS son reconocidas como entero (int, integer), las variables Altura y NHV son reconocidas como número (num, numeric) esta clase de objetos hace referencia a los números que admiten decimales. Finalmente, la variable Variedad es reconocida como carácter (chr, character). Por otro lado la salida de la función glimpse() se diferencia en que las observaciones las reconoce como filas (Rows) y las variables como columnas (Columns), además las variables Altura y NHV son reconocidas de tipo doble precisión (dbl, double precision)\n\n\n\n\n\n\nTip\n\n\n\nR tiene dos nombres para los vectores de coma flotante: dbl y num. Por un lado double es el nombre del tipo de datos, mientras que numeric es el nombre del modo de datos y además de la clase implícita.\nAunque no es el objeto de este texto una discusión más profunda de este tema puede ser encontrada en el enlace\n\n\nEl tipo de datos para la variable Variedad que ha sido reconocido quizás no es el adecuado para análisis posteriores, puesto que la variable es una variable categórica y se recomienda cambiar el tipo de datos a factor. Más adelante realizaremos esta modificación.\n\n\n3.3.2.3 La gramática del paquete ggplot2 para la construcción de gráficos\nEn R encontramos muchos sistemas para hacer gráficos, sin embargo el paquete ggplot2 implementa la gramática de gráficos que es un sistema coherente para construir gráficos.\nDe manera general la grámatica para construir un gráfico es:\n\nggplot(data = ... , mapping = ... ) +\n  GEOM()\n\nPara construir un gráfico se comienza usando la función ggplot(), esto nos permite definir un objeto gráfico al que le vamos a añadir capas hasta obtener el gráfico deseado. El primer argumento que se debe ingresar es el conjunto de datos, el comando ggplot(data = datos) crea un gráfico vacío en el que vamos a presentar algo de nuestros datos. Por el momento nuestro gráfico luce vacío porque no hemos indicado qué y cómo vamos a presentar.\n\nggplot(data = datos)\n\n\n\n\nAhora debemos indicar qué variables van a ser representadas. En el argumento mapping se indica como las variables del conjunto de datos son mapeadas a las propiedades visuales (estéticas, aesthetics) del gráfico. Las variables a ser mapeadas se definen en la función aes() en la que se señalan las variables que van a ser presentadas en el eje \\(x\\) y en el eje de las \\(y\\). En nuestro caso solo vamos a representar el conteo de las variedades en un diagrama de barras por lo que en la función aes() vamos a incluir el argumento x = Variedad.\n\nggplot(data = datos, mapping = aes(x = Variedad)) \n\n\n\n\nDespués de indicar los datos y las variables para nuestro gráfico, debemos indicar cómo se van a representar nuestros datos. En la gramática de ggplot2 el objeto visual usado para representar datos de forma gráfica se lo conoce como geom. En nuestro caso deseamos realizar un diagrama de barras, para esto usaremos geom_bar().\n\nggplot(data = datos, mapping = aes(x = Variedad)) +\n  geom_bar()\n\n\n\n\nSi comparamos este último gráfico con el de la Figura 3.27, podemos notar que el eje de las \\(y\\) aparece la palabra “Frecuencia”. Para lograr esto, podemos usar la función ylab() y añadir una capa donde establecemos la etiqueta del eje \\(y\\).\n\nggplot(data = datos, mapping = aes(x = Variedad)) +\n  geom_bar() +\n  ylab(\"Frecuencia\")\n\n\n\n\nSupongamos que se desea añadir color a las barras. Hay dos opciones, la primera es que todas las barras tengan un único color, la segunda opción es que cada barra tenga un color de acuerdo a la variedad\nExisten dos argumentos que nos pueden ayudar a lograr el objetivo: fill y col, es importante entender la diferencia de ellos cuando se trabajan con gráficos de barras.\n\n\n\n\n\n\nTip\n\n\n\n\nEl argumento fill indica el relleno que se desea dar a las barras.\nEl argumento col indica el color que rodea a las barras\n\n\n\nPara dar color a las barras usamos el argumento fill, si es un color único dentro del objeto geométrico escribimos fill = color_deseado. Por otro lado, si queremos que cada barra tenga un color diferente, dentro de aes incluimos el argumento fill = Variable. El nombre del color puede ser escrito de algunas formas posibles.\n\n\n\n\n\n\nImportante\n\n\n\n\nR tiene 657 colores integrados, los nombres pueden ser obtenidos con la función colors(). Una guía detallada se puede encontrar en el enlace\nSe puede usar también códigos hexadecimales de colores.\nEn el enlace se puede encontrar más información de manejo de colores y paletas de colores en R.\n\n\n\n\nggplot(data = datos, mapping = aes(x = Variedad )) +\n  geom_bar(fill = \"lightblue\") +\n  ylab(\"Frecuencia\")\n\n\n\n\n\nggplot(data = datos, mapping = aes(x = Variedad, fill = Variedad )) +\n  geom_bar() +\n  ylab(\"Frecuencia\")\n\n\n\n\n\n\n3.3.2.4 Histogramas y facetas\nLa variable Altura es una variable cuantitativa continua por lo que para representarla es conveniente utilizar un histograma. El objeto geométrico que nos permite obtener un histograma es geom_histogram().\n\nggplot(data = datos, mapping = aes(x = Altura )) +\n  geom_histogram() +\n  ylab(\"Frecuencia\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\nAl ejecutar el código, además del gráfico, en la consola obtenemos un mensaje que nos sugiere que se están usando 30 barras y nos recomienda trabajar con un argumento para cambiar el resultado. La función geom_histogram() por defecto trabaja con este valor de barras, otra opción adicional a la sugerencia dada por el programa es dentro del objeto indicar cuántas barras se desea incluir con la opción bins =. Además para notar las barras vamos a usar las opciones fill y col.\n\nggplot(data = datos, mapping = aes(x = Altura )) +\n  geom_histogram(bins = 7, fill = \"white\", col = \"black\" ) +\n  ylab(\"Frecuencia\")\n\n\n\n\nDebemos recordar que nuestro conjunto de datos tiene la información de 5 variedades. El histograma presentado corresponde a la altura de todas las variedades, por lo que sería conveniente separar el histograma por variedad. Para obtener un subgráfico para cada variedad, podemos usar la función facet_wrap() o facet_grid(). La función más usada es facet_wrap().\n\n\n\n\n\n\nTip\n\n\n\n\nfacet_wrap() es recomendada para separar en subgráficos por una sola variable categórica, mientras que facet_grid() es recomendada cuando se desea separar en subgráficos por dos variables categóricas.\nfacet_grid() produce una cuadrícula de gráficos para cada combinación de variables que se especifican, aún cuando algunos gráficos aparezcan vacíos.\nfacet_wrap() solo produce gráficos para las combinaciones de variables que tengan datos, es decir que no produce gráficos vacíos.\n\n\n\nEl primer argumento de la función es una fórmula que consiste basicamente del símbolo ~ seguido por el nombre de la variable categórica.\n\nggplot(data = datos, mapping = aes(x = Altura )) +\n  geom_histogram(bins = 7, fill = \"white\", col = \"black\" ) +\n  ylab(\"Frecuencia\") + \n  facet_wrap(~Variedad)\n\n\n\n\n\n\n\n\n\n\nCómo guardar un gráfico desde R con ggplot2\n\n\n\n\nPara guardar un gráfico usamos la función ggsave()\nLa forma básica de usar la funcion es ggsave(nombre_del_archivo, gráfico, width = ancho, height = altura, units = unidades )\nPara evitar confusiones al momento de guardar se recomienda asignar al gráfico que se desea almacenar a una variable.\nPor defecto las unidades para guardar el gráfico son pulgadas. Si deseamos mantener las unidades en pulgadas, no es necesario especificarlas.\n\n\n\nSupongamos que deseamos guardar el último gráfico creado con el nombre hist_alt_fac.png en la carpeta gráficos. Primero guardaremos el gráfico en una variable llamada g1.\n\ng1 &lt;- ggplot(data = datos, mapping = aes(x = Altura )) +\n  geom_histogram(bins = 7, fill = \"white\", col = \"black\" ) +\n  ylab(\"Frecuencia\") + \n  facet_wrap(~Variedad)\n\nPosteriormente, usamos la función ggsave() para guardar el gráfico.\n\nggsave(\"graficos/hist_alt_fac.png\", g1, width = 10, height = 6)\n\n\n\n\n3.3.3 Cálculo de medidas numéricas de resumen.\n\n3.3.3.1 Ingresando los datos (pequeños conjuntos de datos).\nEn esta sección vamos a presentar cómo calcular medidas númericas de resumen ingresando los datos directamente en la consola, es decir que crearemos una variable que contenga los datos.\nEl ingeniero Yorky Gil, con la finalidad de elaborar la curva fenológica para el cultivo de girasol en condiciones del trópico húmedo, realizó una siembra de girasoles. Periódicamente realizó mediciones del número de hojas y la altura de las plantas. De los datos obtenidos por Yorky de la semana 8 se extrajo una muestra de las alturas de 20 observaciones las cuales se muestran en la Tabla 3.4. Con estos datos calcular la media, la mediana, la desviación estándar, el rango. Adicionalmente calcular los 3 cuartiles, y los 9 deciles.\n\n\nTabla 3.4: Altura de girasoles en centímetros. Semana 8\n\n\n140\n123\n110\n100\n137\n\n\n117\n120\n112\n168\n109\n\n\n165\n133\n178\n81\n135\n\n\n145\n109\n78\n169\n132\n\n\n\n\nEste ejercicio lo resolveremos en un script llamado 02_numrespeq.R, no es necesario cargar paquetes por lo que el primer paso para resolver este ejercicio es ingresar los datos en R. En este caso es unicámente un vector con 20 datos, vamos a llamar alt_gir a la variable.\n\nalt_gir &lt;- c(140, 123, 110, 100, 137, 117, 120, 112, 168, 109, \n             165, 133, 178, 81, 135, 145, 109, 78, 169, 132)\n\nUna vez ingresados los datos, podemos calcular la media con la función mean(), la mediana con la función median() y la desviación estándar con la función sd(). Estas tres funciones reciben el vector del que se quiere calcular el valor. Además en el caso de tener valores perdidos se puede indicar que se los remueva con la opción na.rm = TRUE.\n\nmean(alt_gir)\n\n[1] 128.05\n\nmedian(alt_gir)\n\n[1] 127.5\n\nsd(alt_gir)\n\n[1] 27.8709\n\n\nEn el paquete base de R no existe una función que nos permita calcular el rango directamente, sin embargo podemos usar la definición dada en la Sección 3.2.4 y utilizar las funciones max() y min() para calcular el rango como la diferencia entre el máximo y el mínimo del conjunto.\n\nmax(alt_gir) - min(alt_gir)\n\n[1] 100\n\n\nFinalmente para calcular los percentiles utilizamos la función quantile(), los argumentos que recibe esta función son los datos y el percentil o percentiles que se desean calcular escritos en números decimales . Recordemos que los tres cuartiles acumulan el 25%, el 50% y el 75% respectivamente. Si solo quisieramos calcular el primer cuartil, lo podemos obtener escribiendo.\n\nquantile(alt_gir, 0.25)\n\n   25% \n109.75 \n\n\nPara calcular los tres cuartiles de una sola vez, se puede escribir una lista de los cuartiles.\n\nquantile(alt_gir, c(0.25, 0.50, 0.75))\n\n   25%    50%    75% \n109.75 127.50 141.25 \n\n\nEn el caso de los deciles podemos escribir como antes o utilizar la función seq()\n\nquantile(alt_gir, c(0.10, 0.20, 0.30, 0.40, 0.50, 0.60, 0.70, 0.80, 0.90))\n\n  10%   20%   30%   40%   50%   60%   70%   80%   90% \n 98.1 109.0 111.4 118.8 127.5 133.8 137.9 149.0 168.1 \n\n\n\n\n\n\n\n\nTip\n\n\n\nPara ver la ayuda de una función podemos escribir ?función, en este caso podemos investigar como usar la función seq(), escribiendo ?seq. En el panel inferior derecho observamos una descripción detallada de como trabaja la función.\n\n\n\nquantile(alt_gir, seq(from = 0.10, to = 0.90,  by = 0.10))\n\n  10%   20%   30%   40%   50%   60%   70%   80%   90% \n 98.1 109.0 111.4 118.8 127.5 133.8 137.9 149.0 168.1 \n\n\n\n\n3.3.3.2 Leyendo los datos desde un archivo en Excel, usando el pipe (|&gt;) (grandes conjuntos de datos).\nEn la Sección 3.3.2.3, aprendimos a leer datos que se encuentran en un archivo .csv. Ahora trabajaremos con datos que se encuentran disponibles en un libro de Excel. El archivo se llama alt_transp.xlsx y la información está en la hoja de cálculo llamada transplante. Contiene la información de mediciones de altura hechas a plantas de tomate de cinco variedades. Las variables presentes son:\n\nPlanta: número de planta.\nFecha_med: fecha de la medición.\nFecha_trans: fecha del transplante de las plantas del almácigo a los potes, en todos los casos esta variable tiene el mismo valor (27 de mayo de 2023).\nVariedad: variedad de las plantas.\nAltura: altura de las plantas en centímetros.\n\nExisten algunos paquetes para leer información desde archivos Excel, sin embargo vamos a utilizar el paquete readxl. Adicionalmente usaremos el paquete writexl que nos permitirá guardar más adelante nuestros resultados en un archivo de Excel. Vamos a crear un script llamado 03_numresgra.R. Recordemos que primero cargamos los paquetes.\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(readxl)\nlibrary(writexl)\n\nAhora leamos los datos con la función read_excel() del paquete readxl().\n\ntransplante &lt;- read_excel(\"datos/alt_transp.xlsx\", sheet = \"transplante\")\nglimpse(transplante)\n\nRows: 700\nColumns: 5\n$ Planta      &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,…\n$ Fecha_med   &lt;dttm&gt; 2023-06-02, 2023-06-02, 2023-06-02, 2023-06-02, 2023-06-0…\n$ Fecha_trans &lt;dttm&gt; 2023-05-27, 2023-05-27, 2023-05-27, 2023-05-27, 2023-05-2…\n$ Variedad    &lt;chr&gt; \"CHR\", \"CHPA\", \"MY\", \"BN\", \"PHL\", \"MY\", \"CHR\", \"PHL\", \"BN\"…\n$ Altura      &lt;dbl&gt; 7.0, 6.4, 8.0, 5.8, 6.5, 7.3, 6.0, 6.5, 6.0, 7.5, 7.0, 7.0…\n\n\n\n\n\n\n\n\nEntendiendo el código\n\n\n\n\n\n\nFigura 3.29: Leer datos con la función read_excel()\n\n\n\n\nAl usar la función glimpse() notamos que las variables Fecha_med y Fecha_trans son reconocidas como del tipo dttm (date-time) que es un tipo de dato asociados a datos de fecha y tiempo.\nDeseamos conocer la media y la desviación estándar de la altura de las plantas por cada fecha de medición y variedad. En R base existe la familia de funciones apply que permite hacer esto de forma rápida, sin embargo el paquete dplyr tiene una serie de funciones que permiten realizar esto de forma mucho más eficiente, estas funciones son combinadas con el pipe |&gt;.\n\n\n\n\n\n\nImportante\n\n\n\n\nEl pipe |&gt; permite concatenar funciones del paquete dplyr()\nLa forma recomendada para pronunciar el pipe es “entonces”.\n\n\n\nSi calculáramos a mano la media y la desviación estándar de la altura por variedad y fecha de medición, primero agruparíamos los datos por variedad y fecha y luego calcularíamos para cada grupo estas medidas numéricas. Para resolver esto con las funciones de dplyr() usamos el siguiente código:\n\ntransplante |&gt;\n  group_by(Variedad, Fecha_med) |&gt;\n  summarise(\n    Media = mean(Altura),\n    Desv = sd(Altura)\n  )\n\n`summarise()` has grouped output by 'Variedad'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 35 × 4\n# Groups:   Variedad [5]\n   Variedad Fecha_med            Media  Desv\n   &lt;chr&gt;    &lt;dttm&gt;               &lt;dbl&gt; &lt;dbl&gt;\n 1 BN       2023-06-02 00:00:00   6.25  2.05\n 2 BN       2023-06-09 00:00:00   7.98  2.63\n 3 BN       2023-06-16 00:00:00  11.1   3.43\n 4 BN       2023-06-23 00:00:00  17.7   5.49\n 5 BN       2023-06-30 00:00:00  28.6   6.99\n 6 BN       2023-07-07 00:00:00  43.7  13.2 \n 7 BN       2023-07-26 00:00:00 105.   30.3 \n 8 CHPA     2023-06-02 00:00:00   7.54  2.09\n 9 CHPA     2023-06-09 00:00:00  10.6   1.82\n10 CHPA     2023-06-16 00:00:00  14     2.47\n# ℹ 25 more rows\n\n\n\n\n\n\n\n\nEntendiendo el código\n\n\n\n\n\n\nFigura 3.30: Resumiendo datos con funciones dplyr\n\n\n\n\nDe la tabla generada, unicámente se muestran 10 columnas en la consola. Para poder ver toda la tabla se debe guardar toda la tabla en una variable, en este caso la almacenaremos en una variable llamada tbl_alt_var_fec.\n\ntbl_alt_var_fec &lt;- transplante |&gt;\n  group_by(Variedad, Fecha_med) |&gt;\n  summarise(\n    Media = mean(Altura),\n    Desv = sd(Altura)\n  )\n\n`summarise()` has grouped output by 'Variedad'. You can override using the\n`.groups` argument.\n\n\nPosteriormente, podemos visualizar la tabla completa con cualquiera de las siguientes opciones.\n\nDar clic sobre el nombre de la variable en el ambiente.\nEjecutar el código View(tbl_alt_var_fec)\n\nCualquiera de las dos opciones nos permitirá ver nuestra tabla, en una pestaña que se abre junto al script que estamos trabajando.\n\n\n\nFigura 3.31: Viendo una tabla\n\n\nAntes de aprender a guardar la tabla, vamos a crear una variable nueva en el conjunto de datos transplante. La variable que crearemos se llama DDT (días después de transplante). Esta variable resulta de la diferencia entre la fecha de medición y la fecha de transplante. Para crear nuevas variables en el conjunto de datos podemos usar la función mutate() de dplyr.\n\ntransplante &lt;- transplante |&gt;\n  mutate(\n    DDT = as.numeric(Fecha_med - Fecha_trans)\n  )\n\n\n\n\n\n\n\nImportante\n\n\n\n\nEl código empieza con transplante &lt;-, porque el resultado se va a almacenar en el mismo objeto.\nEl resultado de Fecha_med - Fecha_trans contiene las unidades de tiempo en este caso días (days), razón por la que se utiliza la función as.numeric con la finalidad de que solo se almacene el número sin unidades\n\n\n\nVolvemos a calcular la media y la desviación, pero esta vez agrupamos por variedad y por día después de transplante (DDT). Esta vez el resultado será almacenado en la variable tbl_alt_var_ddt. En la Tabla 3.5 se muestra el resultado final.\n\ntbl_alt_var_ddt &lt;- transplante |&gt;\n  group_by(Variedad, DDT) |&gt;\n  summarise(\n    Media = mean(Altura),\n    Desv = sd(Altura)\n  )\n\n`summarise()` has grouped output by 'Variedad'. You can override using the\n`.groups` argument.\n\n\n\n\n\n\nTabla 3.5: Medidas numéricas de resumen por Variedad y Día después de transplante\n\n\nVariedad\nDDT\nMedia\nDesv\n\n\n\n\nBN\n6\n6.25\n2.05\n\n\nBN\n13\n7.97\n2.63\n\n\nBN\n20\n11.07\n3.43\n\n\nBN\n27\n17.70\n5.49\n\n\nBN\n34\n28.60\n6.99\n\n\nBN\n41\n43.70\n13.24\n\n\nBN\n60\n104.95\n30.31\n\n\nCHPA\n6\n7.54\n2.09\n\n\nCHPA\n13\n10.63\n1.82\n\n\nCHPA\n20\n14.00\n2.47\n\n\nCHPA\n27\n22.80\n4.03\n\n\nCHPA\n34\n40.80\n9.88\n\n\nCHPA\n41\n60.45\n8.11\n\n\nCHPA\n60\n129.65\n31.18\n\n\nCHR\n6\n6.98\n1.11\n\n\nCHR\n13\n9.43\n1.48\n\n\nCHR\n20\n13.39\n2.24\n\n\nCHR\n27\n23.58\n4.52\n\n\nCHR\n34\n43.05\n7.03\n\n\nCHR\n41\n63.80\n11.27\n\n\nCHR\n60\n133.20\n37.42\n\n\nMY\n6\n8.68\n1.22\n\n\nMY\n13\n10.97\n1.80\n\n\nMY\n20\n15.18\n2.27\n\n\nMY\n27\n24.50\n4.33\n\n\nMY\n34\n38.05\n6.64\n\n\nMY\n41\n50.65\n8.06\n\n\nMY\n60\n85.45\n22.88\n\n\nPHL\n6\n7.29\n1.08\n\n\nPHL\n13\n9.57\n1.92\n\n\nPHL\n20\n13.28\n2.90\n\n\nPHL\n27\n19.85\n4.33\n\n\nPHL\n34\n33.35\n7.95\n\n\nPHL\n41\n45.40\n10.58\n\n\nPHL\n60\n83.70\n15.70\n\n\n\n\n\n\nPara guardar la tabla podemos usar la función write_xlsx. El uso básico de la función es write_xlsx(x = objeto, ruta_nombre_archivo).\n\nwrite_xlsx(x = tbl_alt_var_ddt, \"resultados/tabla1.xlsx\")\n\n\n\n3.3.3.3 Bono: Haciendo un gráfico de líneas\nEn la Sección 3.1.3.7 se presentaron los gráficos de líneas. Para construir un gráfico de líneas debemos tener los datos resumidos como en la Tabla 3.5.\n\ng2 &lt;- ggplot(tbl_alt_var_ddt, aes(x = DDT, y = Media)) +\n  geom_point(aes(col = Variedad)) +\n  geom_line(aes(col = Variedad)) +\n  labs(\n    x = \"Días después de transplante\",\n    y = \"Altura (cm)\"\n  )\n\ng2\n\n\n\n\nEn el eje de las \\(x\\) del gráfico generado aparecen 3 valores (\\(20\\), \\(40\\) y \\(60\\)) que automáticamente han sido asignados tomando en cuenta los valores de la variable DDT. Si uno quisiera que aparezcan todos los valores en el eje de las \\(x\\) puede usar la función scale_x_continuous y la opción breaks. De forma general el uso de la función es scale_x_continuous(breaks = lista_valores). Para la lista de valores podemos usar dos enfoques.\n\nEscribiendo cada uno de los valores: escribimos una lista con todos los valores que deseamos aparezcan, en este caso las mediciones fueron hechas los dias 6, 13, 20, 27, 34, 41 y 60.\n\n\ng2 &lt;- ggplot(tbl_alt_var_ddt, aes(x = DDT, y = Media)) +\n  geom_point(aes(col = Variedad)) +\n  geom_line(aes(col = Variedad)) +\n  labs(\n    x = \"Días después de transplante\",\n    y = \"Altura (cm)\"\n  ) +\n  scale_x_continuous(breaks = c(6,13,20,27,34,41,60))\n\ng2\n\n\n\n\n\nAlmacenando los valores en una variable: con la función unique, obtenemos los valores únicos de la variable DDT de la tabla usada. Posteriormente en la opción breaks indicamos que en esta variable se encuentran los valores.\n\n\nddts &lt;- unique(tbl_alt_var_ddt$DDT)\n\ng2 &lt;- ggplot(tbl_alt_var_ddt, aes(x = DDT, y = Media)) +\n  geom_point(aes(col = Variedad)) +\n  geom_line(aes(col = Variedad)) +\n  labs(\n    x = \"Días después de transplante\",\n    y = \"Altura (cm)\"\n  ) +\n  scale_x_continuous(breaks = ddts)\n\ng2"
  },
  {
    "objectID": "02-estdesc.html#ejercicios",
    "href": "02-estdesc.html#ejercicios",
    "title": "3  Estadística Descriptiva",
    "section": "Ejercicios",
    "text": "Ejercicios\n\nEjercicio 3.1 En la Tabla 3.6 se muestran los datos de la altura de 40 girasoles. Se pide:\n\n\n\nTabla 3.6: Altura de girasoles en centímetros. Semana 8\n\n\n134\n140\n120\n103\n140\n140\n109\n111\n130\n135\n\n\n149\n157\n100\n114\n169\n180\n140\n110\n110\n130\n\n\n110\n160\n140\n140\n143\n110\n110\n110\n122\n84\n\n\n77\n140\n140\n90\n102\n108\n95\n125\n100\n47\n\n\n\n\n\nDeterminar la media y la mediana.\nDeterminar el rango, la varianza muestral y la desviación muestral.\nDeterminar los 3 cuartiles.\nDeterminar el valor menor al 10% de los datos.\nDeterminar el valor mayor al 37% de los datos.\n\n\nEjercicio 3.2 En la Tabla 3.7 se muestran los datos del número de hojas de 40 girasoles. Se pide:\n\n\n\nTabla 3.7: Número de Hojas de girasoles. Semana 8\n\n\n28\n26\n28\n23\n30\n30\n16\n22\n20\n24\n\n\n32\n18\n12\n16\n18\n22\n25\n13\n13\n12\n\n\n12\n22\n26\n20\n20\n17\n17\n17\n9\n5\n\n\n14\n12\n12\n8\n5\n9\n11\n7\n12\n11\n\n\n\n\n\nDeterminar las medidas de tendencia central.\nDeterminar el rango, la varianza muestral y la desviación muestral.\nDeterminar los 4 quintiles.\nDetermine el valor que es mayor que el 68% de los datos.\nDetermine el valor menor al 25% de los datos.\n\n\nEjercicio 3.3 Con los datos de la Tabla 3.8, determine:\n\n\n\nTabla 3.8: Diámetro de plantas de banano en centímetros.\n\n\n20\n18\n9\n15\n23\n\n\n18\n9\n21\n24\n13\n\n\n22\n28\n11\n11\n19\n\n\n20\n25\n24\n32\n11\n\n\n\n\n\nLos tres cuartiles\nLos deciles 2, 4, 5, 7 y 9\nLos quintiles 1 y 4.\nLos percentiles 33, 47, 65 y 89"
  },
  {
    "objectID": "03-distr.html#operaciones-de-conjuntos",
    "href": "03-distr.html#operaciones-de-conjuntos",
    "title": "4  Distribuciones de probabilidad",
    "section": "4.1 Operaciones de conjuntos",
    "text": "4.1 Operaciones de conjuntos\nSupongamos dos eventos \\(E_1\\) y \\(E_2\\) que son subconjunto del espacio muestral \\(\\Omega\\).\n\nDefinición 4.5 El evento \\(E_1 \\cup E_2\\), consiste de todos los resultados presentes en \\(E_1\\) o \\(E_2\\)\n\n\nDefinición 4.6 El evento \\(E_1 \\cap E_2\\), consiste de todos los resultados presentes en \\(E_1\\) y \\(E_2\\)\n\n\nDefinición 4.7 El complemento del evento \\(E_1\\) denotado por \\(\\overline{E_1}\\) o \\(E_1^C\\), consiste de todos los resultados de \\(\\Omega\\) que no pertenecen a \\(E_1\\)\n\n\n\n\n\n\n\nAxiomas de la Probabilidad\n\n\n\n\n\\(P\\left(\\Omega\\right)=1\\)\nPara cualquier evento \\(E\\), \\(0 \\leq P(E) \\leq 1\\).\nPara cualquier evento \\(E\\), \\(P(E^C)=1-P(E)\\)"
  },
  {
    "objectID": "03-distr.html#definiciones",
    "href": "03-distr.html#definiciones",
    "title": "4  Distribuciones de probabilidad",
    "section": "4.2 Definiciones",
    "text": "4.2 Definiciones"
  },
  {
    "objectID": "03-distr.html#distribución-normal",
    "href": "03-distr.html#distribución-normal",
    "title": "4  Distribuciones de probabilidad",
    "section": "4.3 Distribución Normal",
    "text": "4.3 Distribución Normal"
  },
  {
    "objectID": "03-distr.html#distribución-t-de-student",
    "href": "03-distr.html#distribución-t-de-student",
    "title": "4  Distribuciones de probabilidad",
    "section": "4.4 Distribución \\(t\\) de Student",
    "text": "4.4 Distribución \\(t\\) de Student"
  },
  {
    "objectID": "04-sampling.html#técnicas-de-muestreo",
    "href": "04-sampling.html#técnicas-de-muestreo",
    "title": "5  Muestreo",
    "section": "5.1 Técnicas de muestreo",
    "text": "5.1 Técnicas de muestreo"
  },
  {
    "objectID": "05-icph.html#estimación-puntual-y-por-intervalos",
    "href": "05-icph.html#estimación-puntual-y-por-intervalos",
    "title": "6  Estadística Inferencial",
    "section": "6.1 Estimación puntual y por intervalos",
    "text": "6.1 Estimación puntual y por intervalos"
  },
  {
    "objectID": "05-icph.html#intervalos-de-confianza",
    "href": "05-icph.html#intervalos-de-confianza",
    "title": "6  Estadística Inferencial",
    "section": "6.2 Intervalos de confianza",
    "text": "6.2 Intervalos de confianza"
  },
  {
    "objectID": "05-icph.html#pruebas-de-hipótesis",
    "href": "05-icph.html#pruebas-de-hipótesis",
    "title": "6  Estadística Inferencial",
    "section": "6.3 Pruebas de hipótesis",
    "text": "6.3 Pruebas de hipótesis\n\n6.3.1 Para la media (Prueba \\(t\\))\n\n6.3.1.1 1 sola muestra\n\n\n6.3.1.2 2 muestras independientes\n\n\n6.3.1.3 2 muestras pareadas\n\n\n\n6.3.2 Para la proporción\n\n\n6.3.3 Para la varianza"
  },
  {
    "objectID": "05-icph.html#pruebas-de-hipótesis-no-paramétricas",
    "href": "05-icph.html#pruebas-de-hipótesis-no-paramétricas",
    "title": "6  Estadística Inferencial",
    "section": "6.4 Pruebas de hipótesis no paramétricas",
    "text": "6.4 Pruebas de hipótesis no paramétricas"
  },
  {
    "objectID": "06-regresion.html#gráficos-de-dispersión",
    "href": "06-regresion.html#gráficos-de-dispersión",
    "title": "7  Correlación y Regresión",
    "section": "7.1 Gráficos de dispersión",
    "text": "7.1 Gráficos de dispersión"
  },
  {
    "objectID": "06-regresion.html#análisis-de-correlación",
    "href": "06-regresion.html#análisis-de-correlación",
    "title": "7  Correlación y Regresión",
    "section": "7.2 Análisis de correlación",
    "text": "7.2 Análisis de correlación"
  },
  {
    "objectID": "06-regresion.html#regresión",
    "href": "06-regresion.html#regresión",
    "title": "7  Correlación y Regresión",
    "section": "7.3 Regresión",
    "text": "7.3 Regresión\n\n7.3.1 Regresión lineal simple\n\n\n7.3.2 Regresión lineal múltiple\n\n\n7.3.3 Regresión logística"
  },
  {
    "objectID": "07-DOE.html#principios-básicos",
    "href": "07-DOE.html#principios-básicos",
    "title": "8  Diseño de experimentos",
    "section": "8.1 Principios básicos",
    "text": "8.1 Principios básicos"
  },
  {
    "objectID": "07-DOE.html#prueba-anova",
    "href": "07-DOE.html#prueba-anova",
    "title": "8  Diseño de experimentos",
    "section": "8.2 Prueba ANOVA",
    "text": "8.2 Prueba ANOVA"
  },
  {
    "objectID": "07-DOE.html#diseño-completo-al-azar",
    "href": "07-DOE.html#diseño-completo-al-azar",
    "title": "8  Diseño de experimentos",
    "section": "8.3 Diseño completo al azar",
    "text": "8.3 Diseño completo al azar"
  },
  {
    "objectID": "07-DOE.html#diseño-de-bloques-completos-al-azar",
    "href": "07-DOE.html#diseño-de-bloques-completos-al-azar",
    "title": "8  Diseño de experimentos",
    "section": "8.4 Diseño de bloques completos al azar",
    "text": "8.4 Diseño de bloques completos al azar"
  },
  {
    "objectID": "07-DOE.html#diseño-de-cuadro-latino",
    "href": "07-DOE.html#diseño-de-cuadro-latino",
    "title": "8  Diseño de experimentos",
    "section": "8.5 Diseño de cuadro latino",
    "text": "8.5 Diseño de cuadro latino"
  },
  {
    "objectID": "07-DOE.html#pruebas-de-comparaciones-múltiples-paramétricas",
    "href": "07-DOE.html#pruebas-de-comparaciones-múltiples-paramétricas",
    "title": "8  Diseño de experimentos",
    "section": "8.6 Pruebas de comparaciones múltiples paramétricas",
    "text": "8.6 Pruebas de comparaciones múltiples paramétricas"
  },
  {
    "objectID": "07-DOE.html#pruebas-no-paramétricas-equivalentes-al-análisis-de-varianza",
    "href": "07-DOE.html#pruebas-no-paramétricas-equivalentes-al-análisis-de-varianza",
    "title": "8  Diseño de experimentos",
    "section": "8.7 Pruebas no paramétricas equivalentes al análisis de varianza",
    "text": "8.7 Pruebas no paramétricas equivalentes al análisis de varianza"
  },
  {
    "objectID": "07-DOE.html#pruebas-de-comparaciones-múltiples-no-paramétricas",
    "href": "07-DOE.html#pruebas-de-comparaciones-múltiples-no-paramétricas",
    "title": "8  Diseño de experimentos",
    "section": "8.8 Pruebas de comparaciones múltiples no paramétricas",
    "text": "8.8 Pruebas de comparaciones múltiples no paramétricas"
  },
  {
    "objectID": "07-DOE.html#diseño-factorial",
    "href": "07-DOE.html#diseño-factorial",
    "title": "8  Diseño de experimentos",
    "section": "8.9 Diseño factorial",
    "text": "8.9 Diseño factorial"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "Referencias",
    "section": "",
    "text": "Agresti, A., Franklin, C., and Klingenberg, B. (2023). Statistics.\nThe art and science of learning from data (5a. ed.). Pearson.\n\n\nAgwu, N., and Bialas, P. (2018). Using R/R\nStudio In An\nIntroductory Statistics\nCourse. 10(3).\n\n\nCleff, T. (2013). Exploratory data analysis in business and\neconomics (1a. ed.). Springer. https://link.springer.com/book/10.1007/978-3-319-01517-0\n\n\nData Carpentry. (2020). Packages and libraries. In Introduction to\nR. Harvard Chan Bioinformatics Core (HBC). https://hbctraining.github.io/Intro-to-R-flipped/lessons/04_introR_packages.html\n\n\nIsmay, A. Y., Chester and Kim. (2022). Statistical\nInference via Data Science.\nhttps://moderndive.com/index.html\n\n\nKibuuka, E. (2009). Formulating a country’s agricultural statistics\nstrategy: The South African\nexperience. 10.\n\n\nNavarrete, O., and Chávez, M. (2019). Estadística para\nContadores y Auditores con\nR. Abya Yala.\n\n\nTucker, M. C., Shaw, S. T., Son, J. Y., and Stigler, J. W. (2022).\nTeaching Statistics and Data\nAnalysis with R. Journal of Statistics and\nData Science Education, 1–15. https://doi.org/10.1080/26939169.2022.2089410"
  }
]